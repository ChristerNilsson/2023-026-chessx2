// Generated by CoffeeScript 2.5.1
var analyze, newGame, setIncrement, setMinutes;

import {
  global
} from '../js/globals.js';

import {
  Dialogue
} from '../js/dialogue.js';

import {
  enterFullscreen
} from '../js/utils.js';

import {
  Button
} from '../js/button.js';

analyze = (url) => {
  var date, encodedPGN, pgnString;
  // [Event "Exempelturnering"]
  // [Site "Lichess"]
  // [Date "2023.05.27"]
  // [Round "1"]
  // [White "Spelare1"]
  // [Black "Spelare2"]
  // [Result "1-0"]
  date = new Date().toISOString().slice(0, 10).replace(/-/g, '.');
  console.log(date);
  pgnString = '[Date "' + date + '"]\n' + global.chess.pgn();
  encodedPGN = encodeURIComponent(pgnString);
  return fetch('https://lichess.org/api/import', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: "pgn=" + encodedPGN
  }).then(function(response) {
    console.log(`Statuskod: ${response.status}`);
    return response.json();
  }).then(function(data) {
    console.log(data);
    return window.open(data.url, "_blank");
  }).catch(function(error) {
    return console.error(error);
  });
};

newGame = () => {
  var seconds;
  global.chess.reset();
  seconds = global.minutes * 60 + global.increment;
  global.clocks = [seconds, seconds];
  global.board0.clickedSquares = [];
  global.board1.clickedSquares = [];
  return global.material = 0;
};

export var menu0 = function() { // Main Menu
  global.dialogue = new Dialogue();
  global.dialogue.add('Full Screen', function() {
    enterFullscreen();
    return global.dialogues.clear();
  });
  global.dialogue.add('Increment...', function() {
    return menu2();
  });
  global.dialogue.add('Analyze', function() {
    analyze("https://lichess.org/paste");
    return global.dialogues.clear();
  });
  global.dialogue.add('New Game', function() {
    var seconds;
    newGame();
    seconds = global.minutes * 60 + global.increment;
    global.clocks = [seconds, seconds];
    console.log('newGame', global.minutes, global.increment);
    return global.dialogues.clear();
  });
  global.dialogue.add('Undo', function() {
    global.chess.undo();
    return global.dialogues.clear();
  });
  global.dialogue.add('Minutes...', function() {
    return menu1();
  });
  global.dialogue.clock(' ', true);
  return global.dialogue.textSize *= 1.5;
};

setMinutes = function(minutes) {
  var seconds;
  global.minutes = minutes;
  seconds = minutes * 60 + global.increment;
  global.clocks = [seconds, seconds];
  return global.dialogues.pop();
};

export var menu1 = function() { // Minutes...
  var i, len, n, ref;
  global.dialogue = new Dialogue();
  ref = [1, 2, 3, 5, 10, 15, 20, 30, 45, 60, 90];
  for (i = 0, len = ref.length; i < len; i++) {
    n = ref[i];
    (function(n) {
      return global.dialogue.add(n.toString(), function() {
        return setMinutes(n);
      });
    })(n);
  }
  global.dialogue.clock();
  return global.dialogue.textSize *= 0.5;
};

setIncrement = function(increment) {
  var seconds;
  global.increment = increment;
  seconds = global.minutes * 60 + global.increment;
  global.clocks = [seconds, seconds];
  return global.dialogues.pop();
};

export var menu2 = function() { // Increment...
  var i, len, n, ref;
  global.dialogue = new Dialogue();
  ref = [0, 1, 2, 3, 5, 10, 15, 20, 30, 40, 50];
  for (i = 0, len = ref.length; i < len; i++) {
    n = ref[i];
    (function(n) {
      return global.dialogue.add(n.toString(), function() {
        return setIncrement(n);
      });
    })(n);
  }
  global.dialogue.clock();
  return global.dialogue.textSize *= 0.5;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023-026-chessx2\coffee\menus.coffee