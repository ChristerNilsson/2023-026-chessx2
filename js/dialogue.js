// Generated by CoffeeScript 2.5.1
var Button, calcr1r2;

import {
  global
} from '../js/globals.js';

import {
  menu0
} from '../js/menus.js';

import _ from 'https://cdn.skypack.dev/lodash';

global.dialogues = [];

calcr1r2 = function(n, w, h) {
  var r1, r2, s;
  s = Math.min(w, h);
  r2 = s / 7;
  r1 = s / 3;
  if (n > 6) {
    r2 *= 7 / n;
  }
  return [Math.round(r1), Math.round(r2)];
};

// assert [200,86], calcr1r2 4,600,800
// assert [200,75], calcr1r2 8,600,800
export var Dialogue = class Dialogue {
  constructor(x = width / 2, y = height / 2) {
    this.x = x;
    this.y = y;
    this.col = '#ff06';
    this.buttons = [];
    global.dialogues.push(this);
  }

  add(prompt, event) {
    return this.buttons.push(new Button(this, prompt, event));
  }

  clock(title = ' ', backPop = false, turn = 0) {
    var button, chars, i, j, len, n, r1, r2, ref, v;
    this.backPop = backPop;
    n = this.buttons.length;
    [r1, r2] = calcr1r2(n, width, height);
    ref = this.buttons;
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      button = ref[i];
      v = i * 360 / n + turn - 90;
      button.x = r1 * cos(v);
      button.y = r1 * sin(v);
      button.r = r2;
    }
    button = new Button(this, title, function() {
      if (this.dlg.backPop) {
        return global.dialogues.pop();
      } else {
        return global.dialogues.clear();
      }
    });
    button.x = 0;
    button.y = 0;
    button.r = r2;
    this.buttons.push(button);
    chars = _.max((function() {
      var k, len1, ref1, results;
      ref1 = this.buttons;
      results = [];
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        button = ref1[k];
        results.push(button.title.length);
      }
      return results;
    }).call(this));
    return this.textSize = chars === 1 ? 0.75 * r2 : 2.5 * r2 / chars;
  }

  update(delta) { // -1 eller +1
    var i, j, len, ref, ref1, results;
    if ((0 <= (ref = this.pageStart + delta * this.pageSize) && ref < this.lst.length)) {
      this.pageStart += delta * this.pageSize;
      ref1 = range(this.pageSize);
      results = [];
      for (j = 0, len = ref1.length; j < len; j++) {
        i = ref1[j];
        if (this.pageStart + i < this.lst.length) {
          results.push(this.buttons[i].arr = this.lst[this.pageStart + i]);
        } else {
          results.push(this.buttons[i].arr = []);
        }
      }
      return results;
    }
  }

  // list : (@lst, @pageSize=10, @backPop=true, click = (arr) -> print arr[0]) ->
  // 	@pageStart = 0
  // 	n = @pageSize
  // 	x = 0
  // 	w = width
  // 	h = height/(@pageSize+1)
  // 	@buttons.clear()
  // 	for i in range @pageStart,@pageStart + n
  // 		if i < @lst.length
  // 			item = @lst[i]
  // 			y = i*h
  // 			do (item) => @buttons.push new RectButton @, item, x,y,w,h, -> click @arr
  // 	@buttons.push new RectButton @, ['Prev'], 0*w/3,h*n, w/3,h, -> @dlg.update -1 
  // 	@buttons.push new RectButton @, ['Cancel'], 1*w/3,h*n, w/3,h, -> 
  // 		if @dlg.backPop then dialogues.pop() else dialogues.clear()
  // 	@buttons.push new RectButton @, ['Next'], 2*w/3,h*n, w/3,h, -> @dlg.update +1 
  show() {
    var button, j, len, ref;
    push();
    translate(this.x, this.y);
    textSize(this.textSize);
    ref = this.buttons;
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      button.show(this);
    }
    return pop();
  }

  execute(mx, my) {
    var button, j, len, ref;
    ref = this.buttons;
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      if (button.inside(mx, my, this)) {
        button.execute();
        return true;
      }
    }
    return false;
  }

};

Button = class Button {
  constructor(dlg, title1, event1 = function() {
      return print(this.txt);
    }) {
    this.dlg = dlg;
    this.title = title1;
    this.event = event1;
    this.active = true;
  }

  info(title1, event1) {
    this.title = title1;
    this.event = event1;
    return this.active = true;
  }

  show() {
    var arr;
    if (this.active) {
      fill(this.dlg.col);
    } else {
      fill("#fff8");
    }
    stroke(0);
    ellipse(this.x, this.y, 2 * this.r, 2 * this.r);
    push();
    if (this.active) {
      fill(0);
    } else {
      fill("#888");
    }
    noStroke();
    textAlign(CENTER, CENTER);
    textSize(this.dlg.textSize);
    arr = this.title.split(' ');
    if (arr.length === 1) {
      text(arr[0], this.x, this.y);
    } else {
      text(arr[0], this.x, this.y - 0.3 * this.r);
      text(arr[1], this.x, this.y + 0.3 * this.r);
    }
    return pop();
  }

  inside(mx, my) {
    return this.r > dist(mx, my, this.dlg.x + this.x, this.dlg.y + this.y);
  }

  execute() {
    
    //console.log "Button #{@title} #{@active}"
    if (this.active) {
      return this.event();
    }
  }

};

// class RectButton 
// 	constructor : (@dlg, @arr, @x, @y, @w, @h, @event = -> print @item) -> @active = true 
// 	info : (@arr,@event) -> @active = true
// 	show : ->
// 		col = '#ff0'

  // 		if @active then fill col else fill "#fff8"
// 		stroke 0
// 		rect @x,@y,@w,@h
// 		push()
// 		if @active then fill 0 else fill "#888"
// 		noStroke()
// 		textSize @dlg.textSize
// 		if @arr.length == 1
// 			textAlign CENTER,CENTER
// 			text @arr[0], @x+@w/2,@y+@h/2			
// 		if @arr.length == 2
// 			textAlign LEFT,CENTER
// 			text @arr[0], @x+10,@y+@h/2
// 			textAlign RIGHT,CENTER
// 			text @arr[1], @x+@w-10,@y+@h/2
// 		if @arr.length == 3
// 			textAlign LEFT,CENTER
// 			text @arr[0], @x+10,@y+@h/2
// 			textAlign CENTER,CENTER
// 			text @arr[1], @x+@w/2,@y+@h/2			
// 			textAlign RIGHT,CENTER
// 			text @arr[2], @x+@w-10,@y+@h/2
// 		else
// 		pop()

  // 	inside : (mx,my) ->  @x < mx < @x+@w and @y < my < @y+@h
// 	execute : -> if @active then @event()
export var MenuButton = class MenuButton {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.d = (height + width) / 200;
    this.w = 4 * this.d;
    this.h = 4 * this.d;
  }

  draw() {
    noStroke();
    fill("black");
    rect(this.x, this.y - 1.5 * this.d, this.w, this.d * 0.8);
    rect(this.x, this.y + 0 * this.d, this.w, this.d * 0.8);
    return rect(this.x, this.y + 1.5 * this.d, this.w, this.d * 0.8);
  }

  inside(mx, my) {
    return (this.x - this.w / 2 < mx && mx < this.x + this.w / 2) && (this.y - this.h / 2 < my && my < this.y + this.h / 2);
  }

  onclick() {
    if (global.dialogues.length === 0) {
      return menu0(); // else dialogues.clear()
    }
  }

};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023-026-chessx2\coffee\dialogue.coffee