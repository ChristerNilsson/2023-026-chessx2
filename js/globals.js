// Generated by CoffeeScript 2.5.1
var link, undo;

import {
  ass,
  log,
  range,
  split,
  param,
  hexToBase64,
  spaceShip
} from '../js/utils.js';

import {
  Button
} from '../js/button.js';

import _ from 'https://cdn.skypack.dev/lodash';

export var global = {
  tree: null,
  board: null,
  chess: null,
  spacedRepetition: null,
  //start : -1,
  //stopp : -1,

  //questions : [],
  //qindex : -1,

  //name : 'bishop',
  name: 'tree',
  //arr : [],
  version: 'ver: B',
  //child : 0, # move under consideration
  //children : [], # sorted list of [value,san,uci]
  SIZE: 32, // of square
  pics: {}, // 12 pjäser
  // data:null,
  buttons: []
};

//database : {}, # fen => value
//currNode:null, # pekar in i ett träd
//count: 0, # räknar antal nya drag i trädet
//stack : [] # innehåller aktuell gren
export var coords = (uci) => {
  var c0, c1, r0, r1;
  param.String(uci);
  c0 = "abcdefgh".indexOf(uci[0]);
  r0 = "12345678".indexOf(uci[1]);
  c1 = "abcdefgh".indexOf(uci[2]);
  r1 = "12345678".indexOf(uci[3]);
  return param.Array([c0 + 8 * r0, c1 + 8 * r1]);
};

ass([8, 24], coords("a2a4"));

export var toUCI = ([from, to]) => {
  var c0, c1, r0, r1;
  param.Integer(from);
  param.Integer(to);
  c0 = "abcdefgh"[from % 8];
  r0 = "12345678"[Math.floor(from / 8)];
  c1 = "abcdefgh"[to % 8];
  r1 = "12345678"[Math.floor(to / 8)];
  return param.String(c0 + r0 + c1 + r1);
};

ass("e2e4", toUCI([12, 28]));

export var toObjectNotation = ([from, to]) => {
  var uci;
  param.Integer(from);
  param.Integer(to);
  uci = toUCI([from, to]);
  from = uci.slice(0, 2);
  to = uci.slice(2, 4);
  return param.Object({from, to});
};

ass({
  from: 'e2',
  to: 'e4'
}, toObjectNotation([12, 28]));

export var empty = (n) => {
  param.Integer(n);
  return param.String((1 + Math.floor(n / 8)).toString());
};

undo = () => {};


// if global.stack.length == 0 then return
// global.chess.undo()
// global.currNode = global.stack.pop()
// # makeChildren()
export var dumpState = () => {
  console.log('STATE ########');
  // console.log '  stack',global.stack
  console.log('  currNode', global.currNode);
  return console.log('  history', global.chess.history());
};

link = () => {
  return 'https://lichess.org/analysis/' + global.chess.fen();
};

export var clickString = (key) => {
  param.String(key);
  //g = global
  //if key == 'flip' then g.board.flip()
  if (key === 'link') {
    return window.open(link(), '_blank');
  // else if key == 'up'   then g.child = (g.child-1) %% g.children.length
  // else if key == 'down' then g.child = (g.child+1) %% g.children.length
  } else if (key === 'undo') {
    return undo();
  } else if (key === 'left') {
    return undo();
  // else if key == 'right'
  // console.log g.children,g.child
  // [value,san,uci] = g.children[g.child]
  // console.log 'move',[value,san,uci]
  // g.chess.move san
  // g.stack.push g.currNode
  // g.currNode = g.currNode[uci]
  // makeChildren()
  } else if (key === 'save') {
    return download(g.tree, g.name + '.json');
  } else {
    // else if key == 'correct' then correctAnswer()
    // else if key == 'wrong' then wrongAnswer()
    return console.log('unknown key in clickString', key);
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFscy5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxnbG9iYWxzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxJQUFBLEVBQUE7O0FBQUEsT0FBQTtFQUFRLEdBQVI7RUFBWSxHQUFaO0VBQWdCLEtBQWhCO0VBQXNCLEtBQXRCO0VBQTRCLEtBQTVCO0VBQWtDLFdBQWxDO0VBQThDLFNBQTlDO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBTyxDQUFQLE1BQUE7O0FBRUEsT0FBQSxJQUFPLE1BQUEsR0FBUztFQUVmLElBQUEsRUFBSyxJQUZVO0VBR2YsS0FBQSxFQUFNLElBSFM7RUFJZixLQUFBLEVBQU0sSUFKUztFQUtmLGdCQUFBLEVBQW1CLElBTEo7Ozs7Ozs7O0VBY2YsSUFBQSxFQUFPLE1BZFE7O0VBaUJmLE9BQUEsRUFBUSxRQWpCTzs7O0VBb0JmLElBQUEsRUFBTyxFQXBCUTtFQXFCZixJQUFBLEVBQU8sQ0FBQSxDQXJCUTs7RUF1QmYsT0FBQSxFQUFVO0FBdkJLLEVBSmhCOzs7Ozs7QUFrQ0EsT0FBQSxJQUFPLE1BQUEsR0FBUyxDQUFDLEdBQUQsQ0FBQSxHQUFBO0FBQ2hCLE1BQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUE7RUFBQyxLQUFLLENBQUMsTUFBTixDQUFhLEdBQWI7RUFDQSxFQUFBLEdBQUssVUFBVSxDQUFDLE9BQVgsQ0FBbUIsR0FBRyxDQUFDLENBQUQsQ0FBdEI7RUFDTCxFQUFBLEdBQUssVUFBVSxDQUFDLE9BQVgsQ0FBbUIsR0FBRyxDQUFDLENBQUQsQ0FBdEI7RUFDTCxFQUFBLEdBQUssVUFBVSxDQUFDLE9BQVgsQ0FBbUIsR0FBRyxDQUFDLENBQUQsQ0FBdEI7RUFDTCxFQUFBLEdBQUssVUFBVSxDQUFDLE9BQVgsQ0FBbUIsR0FBRyxDQUFDLENBQUQsQ0FBdEI7U0FDTCxLQUFLLENBQUMsS0FBTixDQUFZLENB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LENBQUEsRUFBdEI7Ozs7Ozs7OztHQUFBLE1BU0EsSUFBRyxHQUFBLEtBQU8sTUFBVjtXQUFzQixRQUFBLENBQVMsQ0FBQyxDQUFDLElBQVgsRUFBaUIsQ0FBQyxDQUFDLElBQUYsR0FBUyxPQUExQixFQUF0QjtHQUFBLE1BQUE7OztXQUdBLE9BQU8sQ0FBQyxHQUFSLENBQVksNEJBQVosRUFBeUMsR0FBekMsRUFIQTs7QUFqQmUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Fzcyxsb2cscmFuZ2Usc3BsaXQscGFyYW0saGV4VG9CYXNlNjQsc3BhY2VTaGlwfSBmcm9tICcuLi9qcy91dGlscy5qcydcclxuaW1wb3J0IHtCdXR0b259IGZyb20gJy4uL2pzL2J1dHRvbi5qcydcclxuaW1wb3J0IF8gZnJvbSAnaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvbG9kYXNoJ1xyXG5cclxuZXhwb3J0IGdsb2JhbCA9IHtcclxuXHJcblx0dHJlZTpudWxsLFxyXG5cdGJvYXJkOm51bGwsXHJcblx0Y2hlc3M6bnVsbCxcclxuXHRzcGFjZWRSZXBldGl0aW9uIDogbnVsbCxcclxuXHJcblx0I3N0YXJ0IDogLTEsXHJcblx0I3N0b3BwIDogLTEsXHJcblxyXG5cdCNxdWVzdGlvbnMgOiBbXSxcclxuXHQjcWluZGV4IDogLTEsXHJcblxyXG5cdCNuYW1lIDogJ2Jpc2hvcCcsXHJcblx0bmFtZSA6ICd0cmVlJyxcclxuXHQjYXJyIDogW10sXHJcblxyXG5cdHZlcnNpb246J3ZlcjogQicsXHJcblx0I2NoaWxkIDogMCwgIyBtb3ZlIHVuZGVyIGNvbnNpZGVyYXRpb25cclxuXHQjY2hpbGRyZW4gOiBbXSwgIyBzb3J0ZWQgbGlzdCBvZiBbdmFsdWUsc2FuLHVjaV1cclxuXHRTSVpFIDogMzIsICMgb2Ygc3F1YXJlXHJcblx0cGljcyA6IHt9LCAjIDEyIHBqw6RzZXJcclxuXHQjIGRhdGE6bnVsbCxcclxuXHRidXR0b25zIDogW10sXHJcblx0I2RhdGFiYXNlIDoge30sICMgZmVuID0+IHZhbHVlXHJcblx0I2N1cnJOb2RlOm51bGwsICMgcGVrYXIgaW4gaSBldHQgdHLDpGRcclxuXHQjY291bnQ6IDAsICMgcsOka25hciBhbnRhbCBueWEgZHJhZyBpIHRyw6RkZXRcclxuXHQjc3RhY2sgOiBbXSAjIGlubmVow6VsbGVyIGFrdHVlbGwgZ3JlblxyXG59XHJcblxyXG5leHBvcnQgY29vcmRzID0gKHVjaSkgPT5cclxuXHRwYXJhbS5TdHJpbmcgdWNpXHJcblx0YzAgPSBcImFiY2RlZmdoXCIuaW5kZXhPZiB1Y2lbMF1cclxuXHRyMCA9IFwiMTIzNDU2NzhcIi5pbmRleE9mIHVjaVsxXVxyXG5cdGMxID0gXCJhYmNkZWZnaFwiLmluZGV4T2YgdWNpWzJdXHJcblx0cjEgPSBcIjEyMzQ1Njc4XCIuaW5kZXhPZiB1Y2lbM11cclxuXHRwYXJhbS5BcnJheSBbYzArOCpyMCwgYzErOCpyMV1cclxuYXNzIFs4LDI0XSwgY29vcmRzIFwiYTJhNFwiXHJcblxyXG5leHBvcnQgdG9VQ0kgPSAoW2Zyb20sdG9dKSA9PlxyXG5cdHBhcmFtLkludGVnZXIgZnJvbVxyXG5cdHBhcmFtLkludGVnZXIgdG9cclxuXHRjMCA9IFwiYWJjZGVmZ2hcIltmcm9tJThdXHJcblx0cjAgPSBcIjEyMzQ1Njc4XCJbZnJvbS8vOF1cclxuXHRjMSA9IFwiYWJjZGVmZ2hcIlt0byU4XVxyXG5cdHIxID0gXCIxMjM0NTY3OFwiW3RvLy84XVxyXG5cdHBhcmFtLlN0cmluZyBjMCtyMCtjMStyMVxyXG5hc3MgXCJlMmU0XCIsIHRvVUNJIFsxMiwyOF1cclxuXHJcbmV4cG9ydCB0b09iamVjdE5vdGF0aW9uID0gKFtmcm9tLHRvXSkgPT5cclxuXHRwYXJhbS5JbnRlZ2VyIGZyb21cclxuXHRwYXJhbS5JbnRlZ2VyIHRvXHJcblx0dWNpID0gdG9VQ0kgW2Zyb20sdG9dXHJcblx0ZnJvbSA9IHVjaS5zbGljZSAwLDJcclxuXHR0byA9IHVjaS5zbGljZSAyLDRcclxuXHRwYXJhbS5PYmplY3Qge2Zyb20sIHRvfVxyXG5hc3Mge2Zyb206J2UyJywgdG86J2U0J30sIHRvT2JqZWN0Tm90YXRpb24gWzEyLDI4XVxyXG5cclxuZXhwb3J0IGVtcHR5ID0gKG4pID0+XHJcblx0cGFyYW0uSW50ZWdlciBuXHJcblx0cGFyYW0uU3RyaW5nICgxK24vLzgpLnRvU3RyaW5nKClcclxuXHJcbnVuZG8gPSA9PiBcclxuXHQjIGlmIGdsb2JhbC5zdGFjay5sZW5ndGggPT0gMCB0aGVuIHJldHVyblxyXG5cdCMgZ2xvYmFsLmNoZXNzLnVuZG8oKVxyXG5cdCMgZ2xvYmFsLmN1cnJOb2RlID0gZ2xvYmFsLnN0YWNrLnBvcCgpXHJcblx0IyAjIG1ha2VDaGlsZHJlbigpXHJcblxyXG5leHBvcnQgZHVtcFN0YXRlID0gPT5cclxuXHRjb25zb2xlLmxvZyAnU1RBVEUgIyMjIyMjIyMnXHJcblx0IyBjb25zb2xlLmxvZyAnICBzdGFjaycsZ2xvYmFsLnN0YWNrXHJcblx0Y29uc29sZS5sb2cgJyAgY3Vyck5vZGUnLGdsb2JhbC5jdXJyTm9kZVxyXG5cdGNvbnNvbGUubG9nICcgIGhpc3RvcnknLGdsb2JhbC5jaGVzcy5oaXN0b3J5KClcclxuXHJcbmxpbmsgPSA9PiAnaHR0cHM6Ly9saWNoZXNzLm9yZy9hbmFseXNpcy8nICsgZ2xvYmFsLmNoZXNzLmZlbigpXHJcblxyXG5cclxuZXhwb3J0IGNsaWNrU3RyaW5nID0gKGtleSkgPT5cclxuXHRwYXJhbS5TdHJpbmcga2V5XHJcblx0I2cgPSBnbG9iYWxcclxuXHQjaWYga2V5ID09ICdmbGlwJyB0aGVuIGcuYm9hcmQuZmxpcCgpXHJcblx0aWYga2V5ID09ICdsaW5rJyB0aGVuIHdpbmRvdy5vcGVuIGxpbmsoKSwgJ19ibGFuaydcclxuXHQjIGVsc2UgaWYga2V5ID09ICd1cCcgICB0aGVuIGcuY2hpbGQgPSAoZy5jaGlsZC0xKSAlJSBnLmNoaWxkcmVuLmxlbmd0aFxyXG5cdCMgZWxzZSBpZiBrZXkgPT0gJ2Rvd24nIHRoZW4gZy5jaGlsZCA9IChnLmNoaWxkKzEpICUlIGcuY2hpbGRyZW4ubGVuZ3RoXHJcblx0ZWxzZSBpZiBrZXkgPT0gJ3VuZG8nIHRoZW4gdW5kbygpXHJcblx0ZWxzZSBpZiBrZXkgPT0gJ2xlZnQnIHRoZW4gdW5kbygpXHJcblx0IyBlbHNlIGlmIGtleSA9PSAncmlnaHQnXHJcblx0XHQjIGNvbnNvbGUubG9nIGcuY2hpbGRyZW4sZy5jaGlsZFxyXG5cdFx0IyBbdmFsdWUsc2FuLHVjaV0gPSBnLmNoaWxkcmVuW2cuY2hpbGRdXHJcblx0XHQjIGNvbnNvbGUubG9nICdtb3ZlJyxbdmFsdWUsc2FuLHVjaV1cclxuXHRcdCMgZy5jaGVzcy5tb3ZlIHNhblxyXG5cdFx0IyBnLnN0YWNrLnB1c2ggZy5jdXJyTm9kZVxyXG5cdFx0IyBnLmN1cnJOb2RlID0gZy5jdXJyTm9kZVt1Y2ldXHJcblx0XHQjIG1ha2VDaGlsZHJlbigpXHJcblx0ZWxzZSBpZiBrZXkgPT0gJ3NhdmUnIHRoZW4gZG93bmxvYWQgZy50cmVlLCBnLm5hbWUgKyAnLmpzb24nXHJcblx0IyBlbHNlIGlmIGtleSA9PSAnY29ycmVjdCcgdGhlbiBjb3JyZWN0QW5zd2VyKClcclxuXHQjIGVsc2UgaWYga2V5ID09ICd3cm9uZycgdGhlbiB3cm9uZ0Fuc3dlcigpXHJcblx0ZWxzZSBjb25zb2xlLmxvZyAndW5rbm93biBrZXkgaW4gY2xpY2tTdHJpbmcnLGtleVxyXG4iXX0=
//# sourceURL=c:\github\2023-026-chessx2\coffee\globals.coffee