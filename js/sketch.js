// Generated by CoffeeScript 2.5.1
var SIZE, arr, released, xdraw;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range,
  enterFullscreen
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  clickString,
  global
} from '../js/globals.js';

SIZE = global.SIZE;

released = true; // prevention of touch bounce

arr = null;

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1, results;
  ref = "rnbqkp";
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('./images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  results = [];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    results.push(global.pics[letter] = loadImage('./images/w' + letter.toLowerCase() + '.png'));
  }
  return results;
};

window.setup = () => {
  global.SIZE = min(innerWidth, innerHeight);
  global.SIZE = innerHeight / 18;
  console.log(global.SIZE);
  createCanvas(innerWidth, innerHeight);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  imageMode(CENTER);
  global.board = new Board(0);
  global.board2 = new Board(1);
  global.chess = new Chess();
  return xdraw();
};

xdraw = () => {
  background('gray');
  textSize(SIZE);
  global.board.draw();
  global.board2.draw();
  // for button in global.buttons
  // 	button.draw()
  fill("black");
  return textAlign(CENTER, CENTER);
};

//window.onresize = -> resize()

// resize = ->
// 	console.log 'resize'
// 	global.SIZE = min(innerWidth,innerWidth*0.75)
// 	# W = H
// 	global.SIZE = global.SIZE/15
// 	#mx = (innerWidth - 8*S)/2
// 	#my = S/2
// 	resizeCanvas innerWidth, innerHeight
// 	#xdraw()
window.mousePressed = () => {
  var button, help, i, j, len, len1, ref, ref1, square;
  help = '';
  if (!released) {
    return;
  }
  released = false;
  ref = global.buttons.concat(global.board.buttons);
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      xdraw();
      return false;
    }
  }
  ref1 = global.board.squares;
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    square = ref1[j];
    if (square.inside(mouseX, mouseY)) {
      square.onclick();
      xdraw();
      return false;
    }
  }
  enterFullscreen();
  return false;
};

window.mouseReleased = () => {
  released = true;
  return false;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxRQUFBLEVBQUE7O0FBQUEsT0FBTyxDQUFQLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLEdBQVI7RUFBWSxHQUFaO0VBQWdCLEtBQWhCO0VBQXNCLGVBQXRCO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsS0FBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLE1BQVI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxXQUFSO0VBQW9CLE1BQXBCO0NBQUEsTUFBQTs7QUFFQSxJQUFBLEdBQU8sTUFBTSxDQUFDOztBQUNkLFFBQUEsR0FBVyxLQVBYOztBQVFBLEdBQUEsR0FBTTs7QUFFTixNQUFNLENBQUMsT0FBUCxHQUFpQixDQUFBLENBQUEsR0FBQTtBQUNqQixNQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxNQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQTtBQUFDO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQUQsQ0FBWCxHQUFzQixTQUFBLENBQVUsWUFBQSxHQUFlLE1BQWYsR0FBd0IsTUFBbEM7RUFEdkI7QUFFQTtBQUFBO0VBQUEsS0FBQSx3Q0FBQTs7aUJBQ0MsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFELENBQVgsR0FBc0IsU0FBQSxDQUFVLFlBQUEsR0FBZSxNQUFNLENBQUMsV0FBUCxDQUFBLENBQWYsR0FBc0MsTUFBaEQ7RUFEdkIsQ0FBQTs7QUFIZ0I7O0FBTWpCLE1BQU0sQ0FBQyxLQUFQLEdBQWUsQ0FBQSxDQUFBLEdBQUE7RUFFZCxNQUFNLENBQUMsSUFBUCxHQUFjLEdBQUEsQ0FBSSxVQUFKLEVBQWUsV0FBZjtFQUNkLE1BQU0sQ0FBQyxJQUFQLEdBQWMsV0FBQSxHQUFZO0VBQzFCLE9BQU8sQ0FBQyxHQUFSLENBQVksTUFBTSxDQUFDLElBQW5CO0VBRUEsWUFBQSxDQUFhLFVBQWIsRUFBd0IsV0FBeEI7RUFDQSxTQUFBLENBQVUsTUFBVixFQUFpQixNQUFqQjtFQUNBLFFBQUEsQ0FBUyxNQUFUO0VBQ0EsU0FBQSxDQUFVLE1BQVY7RUFFQSxNQUFNLENBQUMsS0FBUCxHQUFlLElBQUksS0FBSixDQUFVLENBQVY7RUFDZixNQUFNLENBQUMsTUFBUCxHQUFnQixJQUFJLEtBQUosQ0FBVSxDQUFWO0VBQ2hCLE1BQU0sQ0FBQyxLQUFQLEdBQWUsSUFBSSxLQUFKLENBQUE7U0FFZixLQUFBLENBQUE7QUFmYzs7QUFpQmYsS0FBQSxHQUFRLENBQUEsQ0FBQSxHQUFBO0VBQ1AsVUFBQSxDQUFXLE1BQVg7RUFDQSxRQUFBLENBQVMsSUFBVDtFQUNBLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBYixDQUFBO0VBQ0EsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFkLENBQUEsRUFIRDs7O0VBTUMsSUFBQSxDQUFLLE9BQUw7U0FDQSxTQUFBLENBQVUsTUFBVixFQUFpQixNQUFqQjtBQVJPLEVBakNSOzs7Ozs7Ozs7Ozs7O0FBdURBLE1BQU0sQ0FBQyxZQUFQLEdBQXNCLENBQUEsQ0FBQSxHQUFBO0FBQ3RCLE1BQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQTtFQUFDLElBQUEsR0FBTztFQUNQLElBQUcsQ0FBSSxRQUFQO0FBQXFCLFdBQXJCOztFQUNBLFFBQUEsR0FBVztBQUVYO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxJQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsTUFBZCxFQUFxQixNQUFyQixDQUFIO01BQ0MsTUFBTSxDQUFDLE9BQVAsQ0FBQTtNQUNBLEtBQUEsQ0FBQTtBQUNBLGFBQU8sTUFIUjs7RUFERDtBQUtBO0VBQUEsS0FBQSx3Q0FBQTs7SUFDQyxJQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsTUFBZCxFQUFxQixNQUFyQixDQUFIO01BQ0MsTUFBTSxDQUFDLE9BQVAsQ0FBQTtNQUNBLEtBQUEsQ0FBQTtBQUNBLGFBQU8sTUFIUjs7RUFERDtFQU1BLGVBQUEsQ0FBQTtTQUNBO0FBakJxQjs7QUFtQnRCLE1BQU0sQ0FBQyxhQUFQLEdBQXVCLENBQUEsQ0FBQSxHQUFBO0VBQ3RCLFFBQUEsR0FBVztTQUNYO0FBRnNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvbG9kYXNoJ1xyXG5pbXBvcnQge2Fzcyxsb2cscmFuZ2UsZW50ZXJGdWxsc2NyZWVufSBmcm9tICcuLi9qcy91dGlscy5qcydcclxuaW1wb3J0IHtCb2FyZH0gZnJvbSAnLi4vanMvYm9hcmQuanMnXHJcbmltcG9ydCB7QnV0dG9ufSBmcm9tICcuLi9qcy9idXR0b24uanMnXHJcbmltcG9ydCB7Y2xpY2tTdHJpbmcsZ2xvYmFsfSBmcm9tICcuLi9qcy9nbG9iYWxzLmpzJ1xyXG5cclxuU0laRSA9IGdsb2JhbC5TSVpFXHJcbnJlbGVhc2VkID0gdHJ1ZSAjIHByZXZlbnRpb24gb2YgdG91Y2ggYm91bmNlXHJcbmFyciA9IG51bGxcclxuXHJcbndpbmRvdy5wcmVsb2FkID0gPT5cclxuXHRmb3IgbGV0dGVyIGluIFwicm5icWtwXCJcclxuXHRcdGdsb2JhbC5waWNzW2xldHRlcl0gPSBsb2FkSW1hZ2UgJy4vaW1hZ2VzL2InICsgbGV0dGVyICsgJy5wbmcnXHJcblx0Zm9yIGxldHRlciBpbiBcIlJOQlFLUFwiXHJcblx0XHRnbG9iYWwucGljc1tsZXR0ZXJdID0gbG9hZEltYWdlICcuL2ltYWdlcy93JyArIGxldHRlci50b0xvd2VyQ2FzZSgpICsgJy5wbmcnXHJcblxyXG53aW5kb3cuc2V0dXAgPSA9PlxyXG5cclxuXHRnbG9iYWwuU0laRSA9IG1pbiBpbm5lcldpZHRoLGlubmVySGVpZ2h0XHJcblx0Z2xvYmFsLlNJWkUgPSBpbm5lckhlaWdodC8xOFxyXG5cdGNvbnNvbGUubG9nIGdsb2JhbC5TSVpFXHJcblxyXG5cdGNyZWF0ZUNhbnZhcyBpbm5lcldpZHRoLGlubmVySGVpZ2h0XHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHRyZWN0TW9kZSBDRU5URVJcclxuXHRpbWFnZU1vZGUgQ0VOVEVSXHJcblxyXG5cdGdsb2JhbC5ib2FyZCA9IG5ldyBCb2FyZCAwXHJcblx0Z2xvYmFsLmJvYXJkMiA9IG5ldyBCb2FyZCAxXHJcblx0Z2xvYmFsLmNoZXNzID0gbmV3IENoZXNzKClcclxuXHJcblx0eGRyYXcoKVxyXG5cclxueGRyYXcgPSA9PlxyXG5cdGJhY2tncm91bmQgJ2dyYXknXHJcblx0dGV4dFNpemUgU0laRVxyXG5cdGdsb2JhbC5ib2FyZC5kcmF3KClcclxuXHRnbG9iYWwuYm9hcmQyLmRyYXcoKVxyXG5cdCMgZm9yIGJ1dHRvbiBpbiBnbG9iYWwuYnV0dG9uc1xyXG5cdCMgXHRidXR0b24uZHJhdygpXHJcblx0ZmlsbCBcImJsYWNrXCJcclxuXHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cclxuI3dpbmRvdy5vbnJlc2l6ZSA9IC0+IHJlc2l6ZSgpXHJcblxyXG4jIHJlc2l6ZSA9IC0+XHJcbiMgXHRjb25zb2xlLmxvZyAncmVzaXplJ1xyXG4jIFx0Z2xvYmFsLlNJWkUgPSBtaW4oaW5uZXJXaWR0aCxpbm5lcldpZHRoKjAuNzUpXHJcbiMgXHQjIFcgPSBIXHJcbiMgXHRnbG9iYWwuU0laRSA9IGdsb2JhbC5TSVpFLzE1XHJcbiMgXHQjbXggPSAoaW5uZXJXaWR0aCAtIDgqUykvMlxyXG4jIFx0I215ID0gUy8yXHJcbiMgXHRyZXNpemVDYW52YXMgaW5uZXJXaWR0aCwgaW5uZXJIZWlnaHRcclxuIyBcdCN4ZHJhdygpXHJcblxyXG53aW5kb3cubW91c2VQcmVzc2VkID0gPT5cclxuXHRoZWxwID0gJydcclxuXHRpZiBub3QgcmVsZWFzZWQgdGhlbiByZXR1cm5cclxuXHRyZWxlYXNlZCA9IGZhbHNlXHJcblxyXG5cdGZvciBidXR0b24gaW4gZ2xvYmFsLmJ1dHRvbnMuY29uY2F0IGdsb2JhbC5ib2FyZC5idXR0b25zXHJcblx0XHRpZiBidXR0b24uaW5zaWRlIG1vdXNlWCxtb3VzZVlcclxuXHRcdFx0YnV0dG9uLm9uY2xpY2soKVxyXG5cdFx0XHR4ZHJhdygpXHJcblx0XHRcdHJldHVybiBmYWxzZVxyXG5cdGZvciBzcXVhcmUgaW4gZ2xvYmFsLmJvYXJkLnNxdWFyZXNcclxuXHRcdGlmIHNxdWFyZS5pbnNpZGUgbW91c2VYLG1vdXNlWVxyXG5cdFx0XHRzcXVhcmUub25jbGljaygpXHJcblx0XHRcdHhkcmF3KClcclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblxyXG5cdGVudGVyRnVsbHNjcmVlbigpXHJcblx0ZmFsc2VcclxuXHJcbndpbmRvdy5tb3VzZVJlbGVhc2VkID0gPT5cclxuXHRyZWxlYXNlZCA9IHRydWVcclxuXHRmYWxzZSJdfQ==
//# sourceURL=c:\github\2023-026-chessx2\coffee\sketch.coffee