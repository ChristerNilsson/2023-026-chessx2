// Generated by CoffeeScript 2.5.1
// todo
// vänd på meny för svart
// formatera pgn
var arr, fullScreen, released, resize, showDialogue;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range,
  enterFullscreen,
  signal
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button,
  ClockButton
} from '../js/button.js';

import {
  global
} from '../js/globals.js';

import {
  menu0
} from '../js/menus.js';

import {
  MenuButton
} from '../js/dialogue.js';

released = true; // prevention of touch bounce

arr = null;

Array.prototype.clear = function() {
  return this.length = 0;
};

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1;
  ref = "rnbqkp";
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('./images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    global.pics[letter] = loadImage('./images/w' + letter.toLowerCase() + '.png');
  }
  return global.audio = new Audio('shortclick.mp3');
};

fullScreen = () => {
  return enterFullscreen();
};

showDialogue = function() {
  if (global.dialogues.length > 0) {
    return (_.last(global.dialogues)).show();
  }
};

window.setup = () => {
  createCanvas(innerWidth, innerHeight);
  [global.size, global.setSize] = signal(round(min(innerWidth, innerHeight) / 18));
  [global.mx, global.setMx] = signal(round((innerWidth - 8 * global.size()) / 2));
  [global.my, global.setMy] = signal(round((innerHeight - 17 * global.size()) / 2));
  console.log(navigator.userAgent);
  global.windows = 0 <= navigator.userAgent.indexOf('Windows');
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  imageMode(CENTER);
  angleMode(DEGREES);
  global.board0 = new Board(0);
  global.board1 = new Board(1);
  global.chess = new Chess();
  return resize();
};

window.draw = () => {
  var button, i, len, ref;
  // console.log "draw"
  background('gray');
  textSize(global.size());
  global.board0.draw();
  global.board1.draw();
  ref = global.buttons;
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    button.draw();
  }
  fill("black");
  textAlign(CENTER, CENTER);
  return showDialogue();
};

window.onresize = function() {
  return resize();
};

resize = function() {
  var x0, x1, y0, y1, y2;
  global.setSize(round(innerHeight / 18));
  resizeCanvas(innerWidth, innerHeight);
  global.setMx(round((innerWidth - 8 * global.size()) / 2));
  global.setMy(round((innerHeight - 17 * global.size()) / 2));
  global.buttons = [];
  x0 = round(global.mx() / 2);
  x1 = width - x0;
  y0 = round(0.20 * height);
  y1 = round(0.50 * height);
  y2 = round(0.80 * height);
  global.buttons.push(new MenuButton(x1, y0, () => {
    if (global.paused && global.dialogues.length === 0) {
      return menu0();
    }
  }));
  global.buttons.push(new MenuButton(x0, y2, () => {
    if (global.paused && global.dialogues.length === 0) {
      return menu0();
    }
  }));
  global.board0.resize();
  return global.board1.resize();
};

window.mousePressed = () => {
  var button, i, j, k, l, len, len1, len2, len3, ref, ref1, ref2, ref3, square;
  if (!released) {
    return;
  }
  released = false;
  if (global.dialogues.length > 0) {
    (_.last(global.dialogues)).execute(mouseX, mouseY);
    return false;
  }
  ref = global.buttons;
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      return false;
    }
  }
  ref1 = global.board0.squares.concat(global.board1.squares);
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    square = ref1[j];
    if (square.inside(mouseX, mouseY)) {
      //console.log 'square.inside',square.nr
      square.onclick();
      return false;
    }
  }
  ref2 = global.board0.buttons;
  for (k = 0, len2 = ref2.length; k < len2; k++) {
    button = ref2[k];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      return false;
    }
  }
  ref3 = global.board1.buttons;
  for (l = 0, len3 = ref3.length; l < len3; l++) {
    button = ref3[l];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      return false;
    }
  }
  return false;
};

window.mouseReleased = () => {
  released = true;
  return false;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023-026-chessx2\coffee\sketch.coffee