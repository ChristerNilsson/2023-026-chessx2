// Generated by CoffeeScript 2.5.1
var SIZE, arr, released, xdraw;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range,
  enterFullscreen
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  clickString,
  global
} from '../js/globals.js';

SIZE = global.SIZE;

released = true; // prevention of touch bounce

arr = null;

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1, results;
  ref = "rnbqkp";
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('./images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  results = [];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    results.push(global.pics[letter] = loadImage('./images/w' + letter.toLowerCase() + '.png'));
  }
  return results;
};

window.setup = () => {
  global.SIZE = innerHeight;
  global.SIZE = global.SIZE / 18;
  console.log(global.SIZE);
  createCanvas(0.75 * innerHeight, innerHeight);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  imageMode(CENTER);
  global.board = new Board(0);
  global.board2 = new Board(1);
  global.chess = new Chess();
  return xdraw();
};

xdraw = () => {
  background('gray');
  textSize(SIZE);
  global.board.draw();
  global.board2.draw();
  // for button in global.buttons
  // 	button.draw()
  fill("black");
  return textAlign(CENTER, CENTER);
};

//window.onresize = -> resize()

// resize = ->
// 	console.log 'resize'
// 	global.SIZE = min(innerWidth,innerWidth*0.75)
// 	# W = H
// 	global.SIZE = global.SIZE/15
// 	#mx = (innerWidth - 8*S)/2
// 	#my = S/2
// 	resizeCanvas innerWidth, innerHeight
// 	#xdraw()
window.mousePressed = () => {
  var button, help, i, j, len, len1, ref, ref1, square;
  help = '';
  if (!released) {
    return;
  }
  released = false;
  ref = global.buttons.concat(global.board.buttons);
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      xdraw();
      return false;
    }
  }
  ref1 = global.board.squares;
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    square = ref1[j];
    if (square.inside(mouseX, mouseY)) {
      square.onclick();
      xdraw();
      return false;
    }
  }
  enterFullscreen();
  return false;
};

window.mouseReleased = () => {
  released = true;
  return false;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxRQUFBLEVBQUE7O0FBQUEsT0FBTyxDQUFQLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLEdBQVI7RUFBWSxHQUFaO0VBQWdCLEtBQWhCO0VBQXNCLGVBQXRCO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsS0FBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLE1BQVI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxXQUFSO0VBQW9CLE1BQXBCO0NBQUEsTUFBQTs7QUFFQSxJQUFBLEdBQU8sTUFBTSxDQUFDOztBQUNkLFFBQUEsR0FBVyxLQVBYOztBQVFBLEdBQUEsR0FBTTs7QUFFTixNQUFNLENBQUMsT0FBUCxHQUFpQixDQUFBLENBQUEsR0FBQTtBQUNqQixNQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxNQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQTtBQUFDO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQUQsQ0FBWCxHQUFzQixTQUFBLENBQVUsWUFBQSxHQUFlLE1BQWYsR0FBd0IsTUFBbEM7RUFEdkI7QUFFQTtBQUFBO0VBQUEsS0FBQSx3Q0FBQTs7aUJBQ0MsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFELENBQVgsR0FBc0IsU0FBQSxDQUFVLFlBQUEsR0FBZSxNQUFNLENBQUMsV0FBUCxDQUFBLENBQWYsR0FBc0MsTUFBaEQ7RUFEdkIsQ0FBQTs7QUFIZ0I7O0FBTWpCLE1BQU0sQ0FBQyxLQUFQLEdBQWUsQ0FBQSxDQUFBLEdBQUE7RUFFZCxNQUFNLENBQUMsSUFBUCxHQUFjO0VBQ2QsTUFBTSxDQUFDLElBQVAsR0FBYyxNQUFNLENBQUMsSUFBUCxHQUFZO0VBQzFCLE9BQU8sQ0FBQyxHQUFSLENBQVksTUFBTSxDQUFDLElBQW5CO0VBRUEsWUFBQSxDQUFhLElBQUEsR0FBSyxXQUFsQixFQUE4QixXQUE5QjtFQUNBLFNBQUEsQ0FBVSxNQUFWLEVBQWlCLE1BQWpCO0VBQ0EsUUFBQSxDQUFTLE1BQVQ7RUFDQSxTQUFBLENBQVUsTUFBVjtFQUVBLE1BQU0sQ0FBQyxLQUFQLEdBQWUsSUFBSSxLQUFKLENBQVUsQ0FBVjtFQUNmLE1BQU0sQ0FBQyxNQUFQLEdBQWdCLElBQUksS0FBSixDQUFVLENBQVY7RUFDaEIsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFJLEtBQUosQ0FBQTtTQUVmLEtBQUEsQ0FBQTtBQWZjOztBQWlCZixLQUFBLEdBQVEsQ0FBQSxDQUFBLEdBQUE7RUFDUCxVQUFBLENBQVcsTUFBWDtFQUNBLFFBQUEsQ0FBUyxJQUFUO0VBQ0EsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFiLENBQUE7RUFDQSxNQUFNLENBQUMsTUFBTSxDQUFDLElBQWQsQ0FBQSxFQUhEOzs7RUFNQyxJQUFBLENBQUssT0FBTDtTQUNBLFNBQUEsQ0FBVSxNQUFWLEVBQWlCLE1BQWpCO0FBUk8sRUFqQ1I7Ozs7Ozs7Ozs7Ozs7QUF1REEsTUFBTSxDQUFDLFlBQVAsR0FBc0IsQ0FBQSxDQUFBLEdBQUE7QUFDdEIsTUFBQSxNQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBO0VBQUMsSUFBQSxHQUFPO0VBQ1AsSUFBRyxDQUFJLFFBQVA7QUFBcUIsV0FBckI7O0VBQ0EsUUFBQSxHQUFXO0FBRVg7RUFBQSxLQUFBLHFDQUFBOztJQUNDLElBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxNQUFkLEVBQXFCLE1BQXJCLENBQUg7TUFDQyxNQUFNLENBQUMsT0FBUCxDQUFBO01BQ0EsS0FBQSxDQUFBO0FBQ0EsYUFBTyxNQUhSOztFQUREO0FBS0E7RUFBQSxLQUFBLHdDQUFBOztJQUNDLElBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxNQUFkLEVBQXFCLE1BQXJCLENBQUg7TUFDQyxNQUFNLENBQUMsT0FBUCxDQUFBO01BQ0EsS0FBQSxDQUFBO0FBQ0EsYUFBTyxNQUhSOztFQUREO0VBTUEsZUFBQSxDQUFBO1NBQ0E7QUFqQnFCOztBQW1CdEIsTUFBTSxDQUFDLGFBQVAsR0FBdUIsQ0FBQSxDQUFBLEdBQUE7RUFDdEIsUUFBQSxHQUFXO1NBQ1g7QUFGc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdodHRwczovL2Nkbi5za3lwYWNrLmRldi9sb2Rhc2gnXHJcbmltcG9ydCB7YXNzLGxvZyxyYW5nZSxlbnRlckZ1bGxzY3JlZW59IGZyb20gJy4uL2pzL3V0aWxzLmpzJ1xyXG5pbXBvcnQge0JvYXJkfSBmcm9tICcuLi9qcy9ib2FyZC5qcydcclxuaW1wb3J0IHtCdXR0b259IGZyb20gJy4uL2pzL2J1dHRvbi5qcydcclxuaW1wb3J0IHtjbGlja1N0cmluZyxnbG9iYWx9IGZyb20gJy4uL2pzL2dsb2JhbHMuanMnXHJcblxyXG5TSVpFID0gZ2xvYmFsLlNJWkVcclxucmVsZWFzZWQgPSB0cnVlICMgcHJldmVudGlvbiBvZiB0b3VjaCBib3VuY2VcclxuYXJyID0gbnVsbFxyXG5cclxud2luZG93LnByZWxvYWQgPSA9PlxyXG5cdGZvciBsZXR0ZXIgaW4gXCJybmJxa3BcIlxyXG5cdFx0Z2xvYmFsLnBpY3NbbGV0dGVyXSA9IGxvYWRJbWFnZSAnLi9pbWFnZXMvYicgKyBsZXR0ZXIgKyAnLnBuZydcclxuXHRmb3IgbGV0dGVyIGluIFwiUk5CUUtQXCJcclxuXHRcdGdsb2JhbC5waWNzW2xldHRlcl0gPSBsb2FkSW1hZ2UgJy4vaW1hZ2VzL3cnICsgbGV0dGVyLnRvTG93ZXJDYXNlKCkgKyAnLnBuZydcclxuXHJcbndpbmRvdy5zZXR1cCA9ID0+XHJcblxyXG5cdGdsb2JhbC5TSVpFID0gaW5uZXJIZWlnaHRcclxuXHRnbG9iYWwuU0laRSA9IGdsb2JhbC5TSVpFLzE4XHJcblx0Y29uc29sZS5sb2cgZ2xvYmFsLlNJWkVcclxuXHJcblx0Y3JlYXRlQ2FudmFzIDAuNzUqaW5uZXJIZWlnaHQsaW5uZXJIZWlnaHRcclxuXHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cdHJlY3RNb2RlIENFTlRFUlxyXG5cdGltYWdlTW9kZSBDRU5URVJcclxuXHJcblx0Z2xvYmFsLmJvYXJkID0gbmV3IEJvYXJkIDBcclxuXHRnbG9iYWwuYm9hcmQyID0gbmV3IEJvYXJkIDFcclxuXHRnbG9iYWwuY2hlc3MgPSBuZXcgQ2hlc3MoKVxyXG5cclxuXHR4ZHJhdygpXHJcblxyXG54ZHJhdyA9ID0+XHJcblx0YmFja2dyb3VuZCAnZ3JheSdcclxuXHR0ZXh0U2l6ZSBTSVpFXHJcblx0Z2xvYmFsLmJvYXJkLmRyYXcoKVxyXG5cdGdsb2JhbC5ib2FyZDIuZHJhdygpXHJcblx0IyBmb3IgYnV0dG9uIGluIGdsb2JhbC5idXR0b25zXHJcblx0IyBcdGJ1dHRvbi5kcmF3KClcclxuXHRmaWxsIFwiYmxhY2tcIlxyXG5cdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcblxyXG4jd2luZG93Lm9ucmVzaXplID0gLT4gcmVzaXplKClcclxuXHJcbiMgcmVzaXplID0gLT5cclxuIyBcdGNvbnNvbGUubG9nICdyZXNpemUnXHJcbiMgXHRnbG9iYWwuU0laRSA9IG1pbihpbm5lcldpZHRoLGlubmVyV2lkdGgqMC43NSlcclxuIyBcdCMgVyA9IEhcclxuIyBcdGdsb2JhbC5TSVpFID0gZ2xvYmFsLlNJWkUvMTVcclxuIyBcdCNteCA9IChpbm5lcldpZHRoIC0gOCpTKS8yXHJcbiMgXHQjbXkgPSBTLzJcclxuIyBcdHJlc2l6ZUNhbnZhcyBpbm5lcldpZHRoLCBpbm5lckhlaWdodFxyXG4jIFx0I3hkcmF3KClcclxuXHJcbndpbmRvdy5tb3VzZVByZXNzZWQgPSA9PlxyXG5cdGhlbHAgPSAnJ1xyXG5cdGlmIG5vdCByZWxlYXNlZCB0aGVuIHJldHVyblxyXG5cdHJlbGVhc2VkID0gZmFsc2VcclxuXHJcblx0Zm9yIGJ1dHRvbiBpbiBnbG9iYWwuYnV0dG9ucy5jb25jYXQgZ2xvYmFsLmJvYXJkLmJ1dHRvbnNcclxuXHRcdGlmIGJ1dHRvbi5pbnNpZGUgbW91c2VYLG1vdXNlWVxyXG5cdFx0XHRidXR0b24ub25jbGljaygpXHJcblx0XHRcdHhkcmF3KClcclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0Zm9yIHNxdWFyZSBpbiBnbG9iYWwuYm9hcmQuc3F1YXJlc1xyXG5cdFx0aWYgc3F1YXJlLmluc2lkZSBtb3VzZVgsbW91c2VZXHJcblx0XHRcdHNxdWFyZS5vbmNsaWNrKClcclxuXHRcdFx0eGRyYXcoKVxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHJcblx0ZW50ZXJGdWxsc2NyZWVuKClcclxuXHRmYWxzZVxyXG5cclxud2luZG93Lm1vdXNlUmVsZWFzZWQgPSA9PlxyXG5cdHJlbGVhc2VkID0gdHJ1ZVxyXG5cdGZhbHNlIl19
//# sourceURL=c:\github\2023-026-chessx2\coffee\sketch.coffee