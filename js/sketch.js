// Generated by CoffeeScript 2.5.1
var arr, fullScreen, released, resize, showDialogue;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range,
  enterFullscreen,
  signal
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  global
} from '../js/globals.js';

import {
  menu0
} from '../js/menus.js';

import {
  MenuButton
} from '../js/dialogue.js';

released = true; // prevention of touch bounce

arr = null;

Array.prototype.clear = function() {
  return this.length = 0;
};

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1, results;
  ref = "rnbqkp";
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('./images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  results = [];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    results.push(global.pics[letter] = loadImage('./images/w' + letter.toLowerCase() + '.png'));
  }
  return results;
};

fullScreen = () => {
  return enterFullscreen();
};

showDialogue = function() {
  if (global.dialogues.length > 0) {
    return (_.last(global.dialogues)).show();
  }
};

window.setup = () => {
  createCanvas(innerWidth, innerHeight);
  [global.size, global.setSize] = signal(round(min(innerWidth, innerHeight) / 18));
  [global.mx, global.setMx] = signal(round((innerWidth - 8 * global.size()) / 2));
  [global.my, global.setMy] = signal(round((innerHeight - 17 * global.size()) / 2));
  resize();
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  imageMode(CENTER);
  angleMode(DEGREES);
  global.board0 = new Board(0);
  global.board1 = new Board(1);
  return global.chess = new Chess();
};

window.draw = () => {
  var button, i, len, ref;
  background('gray');
  textSize(global.size());
  global.board0.draw();
  global.board1.draw();
  ref = global.buttons;
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    button.draw();
  }
  fill("black");
  textAlign(CENTER, CENTER);
  return showDialogue();
};

window.onresize = function() {
  return resize();
};

// window.keyPressed = =>
// 	if global.dialogues.length == 0 then menu0() # else dialogues.clear()
resize = function() {
  var x0, x1, y0, y1, y2;
  global.setSize(round(innerHeight / 18));
  resizeCanvas(innerWidth, innerHeight);
  global.setMx(round((innerWidth - 8 * global.size()) / 2));
  global.setMy(round((innerHeight - 17 * global.size()) / 2));
  global.buttons = [];
  x0 = round(global.mx() / 2);
  x1 = width - x0;
  y0 = round(0.20 * height);
  y1 = round(0.50 * height);
  y2 = round(0.80 * height);
  global.buttons.push(new MenuButton(x1, y0, () => {
    if (global.paused && global.dialogues.length === 0) {
      return menu0();
    }
  }));
  global.buttons.push(new MenuButton(x0, y2, () => {
    if (global.paused && global.dialogues.length === 0) {
      return menu0();
    }
  }));
  global.buttons.push(new Button(x0, y1, "⏰", () => {
    if (global.buttons[2].text === "⏰") {
      return global.paused = !global.paused;
    }
  }));
  return global.buttons.push(new Button(x1, y1, "⏰", () => {
    if (global.buttons[3].text === "⏰") {
      return global.paused = !global.paused;
    }
  }));
};

window.mousePressed = () => {
  var button, i, j, len, len1, ref, ref1, square;
  if (!released) {
    return;
  }
  released = false;
  if (global.dialogues.length > 0) {
    (_.last(global.dialogues)).execute(mouseX, mouseY);
    return false;
  }
  ref = global.buttons;
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      return false;
    }
  }
  ref1 = global.board0.squares.concat(global.board1.squares);
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    square = ref1[j];
    if (square.inside(mouseX, mouseY)) {
      //console.log 'square.inside',square.nr
      square.onclick();
      return false;
    }
  }
  return false;
};

window.mouseReleased = () => {
  released = true;
  return false;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsR0FBQSxFQUFBLFVBQUEsRUFBQSxRQUFBLEVBQUEsTUFBQSxFQUFBOztBQUFBLE9BQU8sQ0FBUCxNQUFBOztBQUNBLE9BQUE7RUFBUSxHQUFSO0VBQVksR0FBWjtFQUFnQixLQUFoQjtFQUFzQixlQUF0QjtFQUFzQyxNQUF0QztDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLEtBQVI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxNQUFSO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLEtBQVI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxVQUFSO0NBQUEsTUFBQTs7QUFFQSxRQUFBLEdBQVcsS0FSWDs7QUFTQSxHQUFBLEdBQU07O0FBQ04sS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFoQixHQUF3QixRQUFBLENBQUEsQ0FBQTtTQUFHLElBQUMsQ0FBQSxNQUFELEdBQVU7QUFBYjs7QUFFeEIsTUFBTSxDQUFDLE9BQVAsR0FBaUIsQ0FBQSxDQUFBLEdBQUE7QUFDakIsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUE7QUFBQztFQUFBLEtBQUEscUNBQUE7O0lBQ0MsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFELENBQVgsR0FBc0IsU0FBQSxDQUFVLFlBQUEsR0FBZSxNQUFmLEdBQXdCLE1BQWxDO0VBRHZCO0FBRUE7QUFBQTtFQUFBLEtBQUEsd0NBQUE7O2lCQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBRCxDQUFYLEdBQXNCLFNBQUEsQ0FBVSxZQUFBLEdBQWUsTUFBTSxDQUFDLFdBQVAsQ0FBQSxDQUFmLEdBQXNDLE1BQWhEO0VBRHZCLENBQUE7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akIsRUFBc0IsQ0FBQSxDQUFBLEdBQUE7SUFDekMsSUFBRyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUQsQ0FBRyxDQUFDLElBQWxCLEtBQTBCLEdBQTdCO2FBQ0MsTUFBTSxDQUFDLE1BQVAsR0FBZ0IsQ0FBSSxNQUFNLENBQUMsT0FENUI7O0VBRHlDLENBQXRCLENBQXBCO0FBdEJROztBQTBCVCxNQUFNLENBQUMsWUFBUCxHQUFzQixDQUFBLENBQUEsR0FBQTtBQUN0QixNQUFBLE1BQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQTtFQUFDLElBQUcsQ0FBSSxRQUFQO0FBQXFCLFdBQXJCOztFQUNBLFFBQUEsR0FBVztFQUVYLElBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFqQixHQUEwQixDQUE3QjtJQUNDLENBQUMsQ0FBQyxDQUFDLElBQUYsQ0FBTyxNQUFNLENBQUMsU0FBZCxDQUFELENBQXlCLENBQUMsT0FBMUIsQ0FBa0MsTUFBbEMsRUFBeUMsTUFBekM7QUFDQSxXQUFPLE1BRlI7O0FBSUE7RUFBQSxLQUFBLHFDQUFBOztJQUNDLElBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxNQUFkLEVBQXFCLE1BQXJCLENBQUg7TUFDQyxNQUFNLENBQUMsT0FBUCxDQUFBO0FBQ0EsYUFBTyxNQUZSOztFQUREO0FBS0E7RUFBQSxLQUFBLHdDQUFBOztJQUNDLElBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxNQUFkLEVBQXFCLE1BQXJCLENBQUg7O01BRUMsTUFBTSxDQUFDLE9BQVAsQ0FBQTtBQUNBLGFBQU8sTUFIUjs7RUFERDtTQUtBO0FBbEJxQjs7QUFvQnRCLE1BQU0sQ0FBQyxhQUFQLEdBQXVCLENBQUEsQ0FBQSxHQUFBO0VBQ3RCLFFBQUEsR0FBVztTQUNYO0FBRnNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvbG9kYXNoJ1xyXG5pbXBvcnQge2Fzcyxsb2cscmFuZ2UsZW50ZXJGdWxsc2NyZWVuLHNpZ25hbH0gZnJvbSAnLi4vanMvdXRpbHMuanMnXHJcbmltcG9ydCB7Qm9hcmR9IGZyb20gJy4uL2pzL2JvYXJkLmpzJ1xyXG5pbXBvcnQge0J1dHRvbn0gZnJvbSAnLi4vanMvYnV0dG9uLmpzJ1xyXG5pbXBvcnQge2dsb2JhbH0gZnJvbSAnLi4vanMvZ2xvYmFscy5qcydcclxuaW1wb3J0IHttZW51MH0gZnJvbSAnLi4vanMvbWVudXMuanMnXHJcbmltcG9ydCB7TWVudUJ1dHRvbn0gZnJvbSAnLi4vanMvZGlhbG9ndWUuanMnXHJcblxyXG5yZWxlYXNlZCA9IHRydWUgIyBwcmV2ZW50aW9uIG9mIHRvdWNoIGJvdW5jZVxyXG5hcnIgPSBudWxsXHJcbkFycmF5LnByb3RvdHlwZS5jbGVhciA9IC0+IEBsZW5ndGggPSAwXHJcblxyXG53aW5kb3cucHJlbG9hZCA9ID0+XHJcblx0Zm9yIGxldHRlciBpbiBcInJuYnFrcFwiXHJcblx0XHRnbG9iYWwucGljc1tsZXR0ZXJdID0gbG9hZEltYWdlICcuL2ltYWdlcy9iJyArIGxldHRlciArICcucG5nJ1xyXG5cdGZvciBsZXR0ZXIgaW4gXCJSTkJRS1BcIlxyXG5cdFx0Z2xvYmFsLnBpY3NbbGV0dGVyXSA9IGxvYWRJbWFnZSAnLi9pbWFnZXMvdycgKyBsZXR0ZXIudG9Mb3dlckNhc2UoKSArICcucG5nJ1xyXG5cclxuZnVsbFNjcmVlbiA9ID0+IGVudGVyRnVsbHNjcmVlbigpXHJcblxyXG5zaG93RGlhbG9ndWUgPSAtPiBpZiBnbG9iYWwuZGlhbG9ndWVzLmxlbmd0aCA+IDAgdGhlbiAoXy5sYXN0IGdsb2JhbC5kaWFsb2d1ZXMpLnNob3coKVxyXG5cclxud2luZG93LnNldHVwID0gPT5cclxuXHJcblx0Y3JlYXRlQ2FudmFzIGlubmVyV2lkdGgsaW5uZXJIZWlnaHRcclxuXHJcblx0W2dsb2JhbC5zaXplLCBnbG9iYWwuc2V0U2l6ZV0gPSBzaWduYWwgcm91bmQgbWluKGlubmVyV2lkdGgsaW5uZXJIZWlnaHQpLzE4XHJcblx0W2dsb2JhbC5teCwgZ2xvYmFsLnNldE14XSA9IHNpZ25hbCByb3VuZCAoaW5uZXJXaWR0aCAtIDggKiBnbG9iYWwuc2l6ZSgpKS8yXHJcblx0W2dsb2JhbC5teSwgZ2xvYmFsLnNldE15XSA9IHNpZ25hbCByb3VuZCAoaW5uZXJIZWlnaHQgLSAxNyAqIGdsb2JhbC5zaXplKCkpLzJcclxuXHJcblx0cmVzaXplKClcclxuXHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHRyZWN0TW9kZSBDRU5URVJcclxuXHRpbWFnZU1vZGUgQ0VOVEVSXHJcblx0YW5nbGVNb2RlIERFR1JFRVNcclxuXHJcblx0Z2xvYmFsLmJvYXJkMCA9IG5ldyBCb2FyZCAwXHJcblx0Z2xvYmFsLmJvYXJkMSA9IG5ldyBCb2FyZCAxXHJcblx0Z2xvYmFsLmNoZXNzID0gbmV3IENoZXNzKClcclxuXHJcbndpbmRvdy5kcmF3ID0gPT5cclxuXHRiYWNrZ3JvdW5kICdncmF5J1xyXG5cdHRleHRTaXplIGdsb2JhbC5zaXplKClcclxuXHRnbG9iYWwuYm9hcmQwLmRyYXcoKVxyXG5cdGdsb2JhbC5ib2FyZDEuZHJhdygpXHJcblx0Zm9yIGJ1dHRvbiBpbiBnbG9iYWwuYnV0dG9uc1xyXG5cdFx0YnV0dG9uLmRyYXcoKVxyXG5cdGZpbGwgXCJibGFja1wiXHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHRzaG93RGlhbG9ndWUoKVxyXG5cclxud2luZG93Lm9ucmVzaXplID0gLT4gcmVzaXplKClcclxuXHJcbiMgd2luZG93LmtleVByZXNzZWQgPSA9PlxyXG4jIFx0aWYgZ2xvYmFsLmRpYWxvZ3Vlcy5sZW5ndGggPT0gMCB0aGVuIG1lbnUwKCkgIyBlbHNlIGRpYWxvZ3Vlcy5jbGVhcigpXHJcblxyXG5yZXNpemUgPSAtPlxyXG5cdGdsb2JhbC5zZXRTaXplIHJvdW5kIGlubmVySGVpZ2h0LzE4XHJcblx0cmVzaXplQ2FudmFzIGlubmVyV2lkdGgsIGlubmVySGVpZ2h0XHJcblx0Z2xvYmFsLnNldE14IHJvdW5kIChpbm5lcldpZHRoIC0gOCAqIGdsb2JhbC5zaXplKCkpLzJcclxuXHRnbG9iYWwuc2V0TXkgcm91bmQgKGlubmVySGVpZ2h0IC0gMTcgKiBnbG9iYWwuc2l6ZSgpKS8yXHJcblxyXG5cdGdsb2JhbC5idXR0b25zID0gW11cclxuXHR4MCA9IHJvdW5kIGdsb2JhbC5teCgpLzJcclxuXHR4MSA9IHdpZHRoLSB4MFxyXG5cdHkwID0gcm91bmQgMC4yMCpoZWlnaHRcclxuXHR5MSA9IHJvdW5kIDAuNTAqaGVpZ2h0XHJcblx0eTIgPSByb3VuZCAwLjgwKmhlaWdodFxyXG5cclxuXHRnbG9iYWwuYnV0dG9ucy5wdXNoIG5ldyBNZW51QnV0dG9uIHgxLCB5MCwgPT5cclxuXHRcdGlmIGdsb2JhbC5wYXVzZWQgYW5kIGdsb2JhbC5kaWFsb2d1ZXMubGVuZ3RoID09IDAgdGhlbiBtZW51MCgpXHJcblxyXG5cdGdsb2JhbC5idXR0b25zLnB1c2ggbmV3IE1lbnVCdXR0b24geDAsIHkyLCA9PlxyXG5cdFx0aWYgZ2xvYmFsLnBhdXNlZCBhbmQgZ2xvYmFsLmRpYWxvZ3Vlcy5sZW5ndGggPT0gMCB0aGVuIG1lbnUwKClcclxuXHJcblx0Z2xvYmFsLmJ1dHRvbnMucHVzaCBuZXcgQnV0dG9uIHgwLHkxLFwi4o+wXCIsID0+XHJcblx0XHRpZiBnbG9iYWwuYnV0dG9uc1syXS50ZXh0ID09IFwi4o+wXCJcclxuXHRcdFx0Z2xvYmFsLnBhdXNlZCA9IG5vdCBnbG9iYWwucGF1c2VkXHJcblx0Z2xvYmFsLmJ1dHRvbnMucHVzaCBuZXcgQnV0dG9uIHgxLHkxLFwi4o+wXCIsID0+IFxyXG5cdFx0aWYgZ2xvYmFsLmJ1dHRvbnNbM10udGV4dCA9PSBcIuKPsFwiXHJcblx0XHRcdGdsb2JhbC5wYXVzZWQgPSBub3QgZ2xvYmFsLnBhdXNlZFxyXG5cclxud2luZG93Lm1vdXNlUHJlc3NlZCA9ID0+XHJcblx0aWYgbm90IHJlbGVhc2VkIHRoZW4gcmV0dXJuXHJcblx0cmVsZWFzZWQgPSBmYWxzZVxyXG5cclxuXHRpZiBnbG9iYWwuZGlhbG9ndWVzLmxlbmd0aCA+IDBcclxuXHRcdChfLmxhc3QgZ2xvYmFsLmRpYWxvZ3VlcykuZXhlY3V0ZSBtb3VzZVgsbW91c2VZXHJcblx0XHRyZXR1cm4gZmFsc2VcclxuXHJcblx0Zm9yIGJ1dHRvbiBpbiBnbG9iYWwuYnV0dG9uc1xyXG5cdFx0aWYgYnV0dG9uLmluc2lkZSBtb3VzZVgsbW91c2VZXHJcblx0XHRcdGJ1dHRvbi5vbmNsaWNrKClcclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblxyXG5cdGZvciBzcXVhcmUgaW4gZ2xvYmFsLmJvYXJkMC5zcXVhcmVzLmNvbmNhdCBnbG9iYWwuYm9hcmQxLnNxdWFyZXNcclxuXHRcdGlmIHNxdWFyZS5pbnNpZGUgbW91c2VYLG1vdXNlWVxyXG5cdFx0XHQjY29uc29sZS5sb2cgJ3NxdWFyZS5pbnNpZGUnLHNxdWFyZS5uclxyXG5cdFx0XHRzcXVhcmUub25jbGljaygpXHJcblx0XHRcdHJldHVybiBmYWxzZVxyXG5cdGZhbHNlXHJcblx0XHJcbndpbmRvdy5tb3VzZVJlbGVhc2VkID0gPT5cclxuXHRyZWxlYXNlZCA9IHRydWVcclxuXHRmYWxzZVxyXG4iXX0=
//# sourceURL=c:\github\2023-026-chessx2\coffee\sketch.coffee