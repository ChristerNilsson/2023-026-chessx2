// Generated by CoffeeScript 2.5.1
var modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  lerp,
  param,
  range,
  hexToBase64,
  enterFullscreen
} from '../js/utils.js';

import {
  Square
} from '../js/square.js';

import {
  Button
} from '../js/button.js';

import {
  coords,
  global,
  toObjectNotation,
  toUCI
} from '../js/globals.js';

import {
  dumpState
} from '../js/globals.js';

// copyToClipboard = (string) =>
// 	textarea = null
// 	result = null

  // 	try 
// 		textarea = document.createElement('textarea');
// 		textarea.setAttribute('readonly', true);
// 		textarea.setAttribute('contenteditable', true);
// 		textarea.style.position = 'fixed'; # prevent scroll from jumping to the bottom when focus is set.
// 		textarea.value = string

  // 		document.body.appendChild textarea

  // 		textarea.focus()
// 		textarea.select()

  // 		xrange = document.createRange()
// 		xrange.selectNodeContents(textarea)

  // 		sel = window.getSelection()
// 		sel.removeAllRanges()
// 		sel.addRange xrange

  // 		textarea.setSelectionRange 0, textarea.value.length
// 		result = document.execCommand 'copy'
// 	catch err
// 		alert err
// 		result = null
// 	finally
// 		document.body.removeChild textarea

  // 	#manual copy fallback using prompt
// 	if !result 
// 		isMac = navigator.platform.toUpperCase().indexOf('MAC') >= 0
// 		copyHotkey = isMac ? '⌘C' : 'CTRL+C';
// 		result = prompt("Press #{copyHotkey}", string); # eslint-disable-line no-alert
// 		if (!result) 
// 			return false
// 	return true

  // iosCopyToClipboard = (el) =>
// 	oldContentEditable = el.contentEditable
// 	oldReadOnly = el.readOnly
// 	xrange = document.createRange()

  // 	el.contentEditable = true
// 	el.readOnly = false
// 	xrange.selectNodeContents el

  // 	s = window.getSelection()
// 	s.removeAllRanges()
// 	s.addRange xrange

  // 	el.setSelectionRange 0, 999999 

  // 	el.contentEditable = oldContentEditable
// 	el.readOnly = oldReadOnly

  // 	document.execCommand 'copy'
export var Board = class Board {
  constructor(nr) {
    var i, k, len, ref;
    this.click = this.click.bind(this);
    this.draw = this.draw.bind(this);
    this.littera = this.littera.bind(this);
    this.nr = nr;
    this.squares = [];
    this.clickedSquares = [];
    this.pieces = "";
    ref = range(64);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      ((i) => {
        return this.squares.push(new Square(this.nr, i, () => {
          return this.click(i);
        }));
      })(i);
    }
    this.buttons = [];
  }

  click(i) {
    var col, color, csl, g, row, sq, uci;
    g = global;
    if (this.nr === modulo(g.chess.history().length, 2)) {
      return;
    }
    col = modulo(i, 8);
    row = 7 - Math.floor(i / 8);
    sq = g.chess.board()[row][col];
    color = "wb"[modulo(g.chess.history().length, 2)];
    csl = this.clickedSquares.length;
    if (csl === 0) {
      if (sq !== null && sq.color === color) {
        return this.clickedSquares.push(i);
      }
    } else if (csl === 1) {
      if (i === this.clickedSquares[0]) {
        return this.clickedSquares = []; // kontrollera draget
      } else {
        this.clickedSquares.push(i);
        uci = toUCI(this.clickedSquares);
        // är detta ett korrekt drag? I så fall, utför det
        if (g.chess.move({
          from: uci.slice(0, 2),
          to: uci.slice(2, 4)
        })) {
          //input = document.getElementById "myInput"
          //input.value = g.chess.pgn()
          //copyToClipboard g.chess.pgn()
          //navigator.clipboard.writeText g.chess.pgn()
          //input = document.getElementById "myInput"

          // copyText = document.querySelector "#myInput"
          //g.pgn = g.chess.pgn()
          g.pgn = new Date().toLocaleString();
          return this.clickedSquares = [];
        } else {
          return this.clickedSquares.pop();
        }
      }
    }
  }

  draw() {
    var SIZE, button, i, j, k, l, len, len1, len2, m, piece, ref, ref1, ref2, ref3, ref4, ref5, sq;
    ref = this.buttons;
    for (k = 0, len = ref.length; k < len; k++) {
      button = ref[k];
      button.draw();
    }
    fill('white');
    textSize(global.size() * 0.3);
    push();
    if (this.nr === 0) {
      translate(global.mx(), global.my());
    } else {
      translate(global.mx(), global.my() + 9 * global.size());
    }
    ref1 = range(8);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      i = ref1[l];
      ref2 = range(8);
      for (m = 0, len2 = ref2.length; m < len2; m++) {
        j = ref2[m];
        piece = global.chess.board()[7 - i][j];
        sq = this.squares[i * 8 + j];
        if ((ref3 = this.clickedSquares.length) === 0 || ref3 === 2) {
          sq.draw(piece, false);
        }
        if ((ref4 = this.clickedSquares.length) === 1) {
          sq.draw(piece, i * 8 + j === this.clickedSquares[0]);
        } else if ((ref5 = this.clickedSquares.length) === 3 || ref5 === 4) {
          sq.draw(piece, i * 8 + j === this.clickedSquares[2]);
        }
      }
    }
    stroke('black');
    if (this.nr === global.chess.history().length % 2) {
      fill(128, 128, 128, 64);
    } else {
      noFill();
    }
    SIZE = global.size();
    rect(SIZE * 4, SIZE * 4, SIZE * 8, SIZE * 8);
    return pop();
  }

  littera() {
    var SIZE, digits, i, k, len, letters, ref, results;
    SIZE = global.size();
    noStroke();
    fill('black');
    textSize(SIZE * 0.3);
    letters = false ? "hgfedcba" : "abcdefgh";
    digits = false ? "12345678" : "87654321";
    ref = range(8);
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      text(letters[i], SIZE * (i + 1), SIZE * 8.8);
      results.push(text(digits[i], SIZE * 0.15, SIZE * (i + 1)));
    }
    return results;
  }

};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023-026-chessx2\coffee\board.coffee