// Generated by CoffeeScript 2.5.1
var pics, width;

import {
  global
} from '../js/globals.js';

import {
  param
} from '../js/utils.js';

//SIZE = global.SIZE
pics = global.pics;

width = global.width;

export var Square = class Square {
  constructor(nr, i, onclick) {
    this.draw = this.draw.bind(this);
    this.inside = this.inside.bind(this);
    this.nr = nr;
    this.i = i;
    this.onclick = onclick;
    param.Integer(this.i);
    this.x = this.i % 8;
    this.y = 7 - Math.floor(this.i / 8);
    this.w = global.SIZE;
    this.h = global.SIZE;
    this.col = 'white';
  }

  draw(piece, flipped, selected) {
    var key, x, y;
    //param.Test piece==null or piece.type in 'rnbqkp' and piece.color in 'bw'
    //param.Boolean flipped
    if ((this.x + this.y) % 2 === 1) {
      fill('gray');
    } else {
      fill('lightgray');
    }
    if (selected) {
      fill('green');
    }
    [x, y] = [this.x, this.y];
    [x, y] = [x + 0.5, y + 0.5];
    noStroke();
    rect(global.SIZE * x, global.SIZE * y, global.SIZE, global.SIZE);
    if (!piece) {
      return;
    }
    key = piece.type.toLowerCase();
    if (piece.color === 'w') {
      key = key.toUpperCase();
    }
    if (this.nr === 0) {
      push();
      translate(global.SIZE * x, global.SIZE * y);
      scale(-1, -1);
      image(pics[key], 0, 0, global.SIZE, global.SIZE);
      return pop();
    } else {
      return image(pics[key], global.SIZE * x, global.SIZE * y, global.SIZE, global.SIZE);
    }
  }

  inside(mx, my) {
    var res, x, y;
    param.Number(mx);
    param.Number(my);
    x = (this.x + 1) * global.SIZE;
    y = (this.y + 1) * global.SIZE;
    res = (x - this.w / 2 < mx && mx < x + this.w / 2) && (y - this.h / 2 < my && my < y + this.h / 2);
    return param.Boolean(res);
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3F1YXJlLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNxdWFyZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBOztBQUFBLE9BQUE7RUFBUSxNQUFSO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsS0FBUjtDQUFBLE1BQUEsaUJBREE7OztBQUlBLElBQUEsR0FBTyxNQUFNLENBQUM7O0FBQ2QsS0FBQSxHQUFRLE1BQU0sQ0FBQzs7QUFFZixPQUFBLElBQWEsU0FBTixNQUFBLE9BQUE7RUFDTixXQUFhLEdBQUEsR0FBQSxTQUFBLENBQUE7UUFRYixDQUFBLFdBQUEsQ0FBQTtRQXNCQSxDQUFBLGFBQUEsQ0FBQTtJQTlCYyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFDckIsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFDLENBQUEsQ0FBZjtJQUNBLElBQUMsQ0FBQSxDQUFELEdBQUssSUFBQyxDQUFBLENBQUQsR0FBRztJQUNSLElBQUMsQ0FBQSxDQUFELEdBQUssQ0FBQSxjQUFJLElBQUMsQ0FBQSxJQUFHO0lBQ2IsSUFBQyxDQUFBLENBQUQsR0FBSyxNQUFNLENBQUM7SUFDWixJQUFDLENBQUEsQ0FBRCxHQUFLLE1BQU0sQ0FBQztJQUNaLElBQUMsQ0FBQSxHQUFELEdBQU87RUFOSzs7RUFRYixJQUFPLENBQUMsS0FBRCxFQUFPLE9BQVAsRUFBZSxRQUFmLENBQUE7QUFDUixRQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQTs7O0lBRUUsSUFBRyxDQUFDLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUwsQ0FBQSxHQUFVLENBQVYsS0FBZSxDQUFsQjtNQUF5QixJQUFBLENBQUssTUFBTCxFQUF6QjtLQUFBLE1BQUE7TUFBMEMsSUFBQSxDQUFLLFdBQUwsRUFBMUM7O0lBQ0EsSUFBRyxRQUFIO01BQWlCLElBQUEsQ0FBSyxPQUFMLEVBQWpCOztJQUNBLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQSxHQUFRLENBQUMsSUFBQyxDQUFBLENBQUYsRUFBSSxJQUFDLENBQUEsQ0FBTDtJQUNSLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQSxHQUFRLENBQUMsQ0FBQSxHQUFFLEdBQUgsRUFBTyxDQUFBLEdBQUUsR0FBVDtJQUNSLFFBQUEsQ0FBQTtJQUNBLElBQUEsQ0FBSyxNQUFNLENBQUMsSUFBUCxHQUFZLENBQWpCLEVBQW9CLE1BQU0sQ0FBQyxJQUFQLEdBQVksQ0FBaEMsRUFBa0MsTUFBTSxDQUFDLElBQXpDLEVBQThDLE1BQU0sQ0FBQyxJQUFyRDtJQUNBLElBQUcsQ0FBSSxLQUFQO0FBQWtCLGFBQWxCOztJQUNBLEdBQUEsR0FBTSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVgsQ0FBQTtJQUNOLElBQUcsS0FBSyxDQUFDLEtBQU4sS0FBZSxHQUFsQjtNQUEyQixHQUFBLEdBQU0sR0FBRyxDQUFDLFdBQUosQ0FBQSxFQUFqQzs7SUFFQSxJQUFHLElBQUMsQ0FBQSxFQUFELEtBQUssQ0FBUjtNQUNDLElBQUEsQ0FBQTtNQUNBLFNBQUEsQ0FBVSxNQUFNLENBQUMsSUFBUCxHQUFZLENBQXRCLEVBQXlCLE1BQU0sQ0FBQyxJQUFQLEdBQVksQ0FBckM7TUFDQSxLQUFBLENBQU0sQ0FBQyxDQUFQLEVBQVMsQ0FBQyxDQUFWO01BQ0EsS0FBQSxDQUFNLElBQUksQ0FBQyxHQUFELENBQVYsRUFBZ0IsQ0FBaEIsRUFBbUIsQ0FBbkIsRUFBcUIsTUFBTSxDQUFDLElBQTVCLEVBQWlDLE1BQU0sQ0FBQyxJQUF4QzthQUNBLEdBQUEsQ0FBQSxFQUxEO0tBQUEsTUFBQTthQU9DLEtBQUEsQ0FBTSxJQUFJLENBQUMsR0FBRCxDQUFWLEVBQWlCLE1BQU0sQ0FBQyxJQUFQLEdBQVksQ0FBN0IsRUFBZ0MsTUFBTSxDQUFDLElBQVAsR0FBWSxDQUE1QyxFQUE4QyxNQUFNLENBQUMsSUFBckQsRUFBMEQsTUFBTSxDQUFDLElBQWpFLEVBUEQ7O0VBYk07O0VBc0JQLE1BQVMsQ0FBQyxFQUFELEVBQUksRUFBSixDQUFBO0FBQ1YsUUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBO0lBQUUsS0FBSyxDQUFDLE1BQU4sQ0FBYSxFQUFiO0lBQ0EsS0FBSyxDQUFDLE1BQU4sQ0FBYSxFQUFiO0lBQ0EsQ0FBQSxHQUFJLENBQUMsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFKLENBQUEsR0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQSxHQUFJLENBQUMsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFKLENBQUEsR0FBTyxNQUFNLENBQUM7SUFDbEIsR0FBQSxHQUFNLENBQUEsQ0FBQSxHQUFFLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBTCxHQUFTLEVBQVQsSUFBUyxFQUFULEdBQWMsQ0FBQSxHQUFFLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBbkIsQ0FBQSxJQUF5QixDQUFBLENBQUEsR0FBRSxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQUwsR0FBUyxFQUFULElBQVMsRUFBVCxHQUFjLENBQUEsR0FBRSxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQW5CO1dBQy9CLEtBQUssQ0FBQyxPQUFOLENBQWMsR0FBZDtFQU5ROztBQS9CSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z2xvYmFsfSBmcm9tICcuLi9qcy9nbG9iYWxzLmpzJ1xyXG5pbXBvcnQge3BhcmFtfSBmcm9tICcuLi9qcy91dGlscy5qcydcclxuXHJcbiNTSVpFID0gZ2xvYmFsLlNJWkVcclxucGljcyA9IGdsb2JhbC5waWNzXHJcbndpZHRoID0gZ2xvYmFsLndpZHRoXHJcblxyXG5leHBvcnQgY2xhc3MgU3F1YXJlXHJcblx0Y29uc3RydWN0b3I6IChAbnIsQGksQG9uY2xpY2spIC0+XHJcblx0XHRwYXJhbS5JbnRlZ2VyIEBpXHJcblx0XHRAeCA9IEBpJThcclxuXHRcdEB5ID0gNyAtIEBpLy84XHJcblx0XHRAdyA9IGdsb2JhbC5TSVpFXHJcblx0XHRAaCA9IGdsb2JhbC5TSVpFXHJcblx0XHRAY29sID0gJ3doaXRlJ1xyXG5cclxuXHRkcmF3IDogKHBpZWNlLGZsaXBwZWQsc2VsZWN0ZWQpID0+XHJcblx0XHQjcGFyYW0uVGVzdCBwaWVjZT09bnVsbCBvciBwaWVjZS50eXBlIGluICdybmJxa3AnIGFuZCBwaWVjZS5jb2xvciBpbiAnYncnXHJcblx0XHQjcGFyYW0uQm9vbGVhbiBmbGlwcGVkXHJcblx0XHRpZiAoQHgrQHkpICUgMiA9PSAxIHRoZW4gZmlsbCAnZ3JheScgZWxzZSBmaWxsICdsaWdodGdyYXknXHJcblx0XHRpZiBzZWxlY3RlZCB0aGVuIGZpbGwgJ2dyZWVuJ1xyXG5cdFx0W3gseV0gPSBbQHgsQHldXHJcblx0XHRbeCx5XSA9IFt4KzAuNSx5KzAuNV1cclxuXHRcdG5vU3Ryb2tlKClcclxuXHRcdHJlY3QgZ2xvYmFsLlNJWkUqeCwgZ2xvYmFsLlNJWkUqeSxnbG9iYWwuU0laRSxnbG9iYWwuU0laRVxyXG5cdFx0aWYgbm90IHBpZWNlIHRoZW4gcmV0dXJuXHJcblx0XHRrZXkgPSBwaWVjZS50eXBlLnRvTG93ZXJDYXNlKClcclxuXHRcdGlmIHBpZWNlLmNvbG9yID09ICd3JyB0aGVuIGtleSA9IGtleS50b1VwcGVyQ2FzZSgpXHJcblxyXG5cdFx0aWYgQG5yPT0wXHJcblx0XHRcdHB1c2goKVxyXG5cdFx0XHR0cmFuc2xhdGUgZ2xvYmFsLlNJWkUqeCwgZ2xvYmFsLlNJWkUqeVxyXG5cdFx0XHRzY2FsZSAtMSwtMVxyXG5cdFx0XHRpbWFnZSBwaWNzW2tleV0sMCwgMCxnbG9iYWwuU0laRSxnbG9iYWwuU0laRVxyXG5cdFx0XHRwb3AoKVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRpbWFnZSBwaWNzW2tleV0sIGdsb2JhbC5TSVpFKngsIGdsb2JhbC5TSVpFKnksZ2xvYmFsLlNJWkUsZ2xvYmFsLlNJWkVcclxuXHJcblx0aW5zaWRlIDogKG14LG15KSA9PlxyXG5cdFx0cGFyYW0uTnVtYmVyIG14XHJcblx0XHRwYXJhbS5OdW1iZXIgbXlcclxuXHRcdHggPSAoQHgrMSkqZ2xvYmFsLlNJWkVcclxuXHRcdHkgPSAoQHkrMSkqZ2xvYmFsLlNJWkVcclxuXHRcdHJlcyA9IHgtQHcvMiA8IG14IDwgeCtAdy8yIGFuZCB5LUBoLzIgPCBteSA8IHkrQGgvMlxyXG5cdFx0cGFyYW0uQm9vbGVhbiByZXNcclxuIl19
//# sourceURL=c:\github\2023-026-chessx2\coffee\square.coffee