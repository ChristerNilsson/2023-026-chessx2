// Generated by CoffeeScript 2.5.1
var pics, width,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

import {
  global
} from '../js/globals.js';

import {
  param
} from '../js/utils.js';

pics = global.pics;

width = global.width;

export var Square = class Square {
  constructor(nr, i, x1, y1, onclick) {
    this.draw = this.draw.bind(this);
    this.inside = this.inside.bind(this);
    this.nr = nr;
    this.i = i;
    this.x = x1;
    this.y = y1;
    this.onclick = onclick;
    this.ix = modulo(this.i, 8);
    this.iy = 7 - Math.floor(this.i / 8);
    this.w = global.SIZE;
    this.h = global.SIZE;
    this.col = 'white';
  }

  draw(piece, selected) {
    var key, x, y;
    if ((this.ix + this.iy) % 2 === 1) {
      fill('gray');
    } else {
      fill('lightgray');
    }
    if (selected) {
      fill('green');
    }
    [x, y] = [this.ix + 0.5, this.iy + 0.5];
    noStroke();
    rect(global.SIZE * x, global.SIZE * y, global.SIZE, global.SIZE);
    if (!piece) {
      return;
    }
    key = piece.type.toLowerCase();
    if (piece.color === 'w') {
      key = key.toUpperCase();
    }
    if (this.nr === 0) {
      push();
      translate(global.SIZE * x, global.SIZE * y);
      scale(-1, -1);
      image(pics[key], 0, 0, global.SIZE, global.SIZE);
      return pop();
    } else {
      return image(pics[key], global.SIZE * x, global.SIZE * y, global.SIZE, global.SIZE);
    }
  }

  inside(mx, my) {
    var ref, ref1, res;
    res = (this.x - this.w / 2 < (ref = mx - global.SIZE / 2) && ref < this.x + this.w / 2);
    return res && (this.y - this.h / 2 < (ref1 = my - global.SIZE / 2) && ref1 < this.y + this.h / 2);
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3F1YXJlLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNxdWFyZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLEtBQUE7RUFBQTs7QUFBQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLEtBQVI7Q0FBQSxNQUFBOztBQUVBLElBQUEsR0FBTyxNQUFNLENBQUM7O0FBQ2QsS0FBQSxHQUFRLE1BQU0sQ0FBQzs7QUFFZixPQUFBLElBQWEsU0FBTixNQUFBLE9BQUE7RUFDTixXQUFhLEdBQUEsR0FBQSxJQUFBLElBQUEsU0FBQSxDQUFBO1FBT2IsQ0FBQSxXQUFBLENBQUE7UUFtQkEsQ0FBQSxhQUFBLENBQUE7SUExQmMsSUFBQyxDQUFBO0lBQUcsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQzNCLElBQUMsQ0FBQSxFQUFELFVBQU0sSUFBQyxDQUFBLEdBQUs7SUFDWixJQUFDLENBQUEsRUFBRCxHQUFNLENBQUEsY0FBSSxJQUFDLENBQUEsSUFBRztJQUNkLElBQUMsQ0FBQSxDQUFELEdBQUssTUFBTSxDQUFDO0lBQ1osSUFBQyxDQUFBLENBQUQsR0FBSyxNQUFNLENBQUM7SUFDWixJQUFDLENBQUEsR0FBRCxHQUFPO0VBTEs7O0VBT2IsSUFBTyxDQUFDLEtBQUQsRUFBTyxRQUFQLENBQUE7QUFDUixRQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUE7SUFBRSxJQUFHLENBQUMsSUFBQyxDQUFBLEVBQUQsR0FBSSxJQUFDLENBQUEsRUFBTixDQUFBLEdBQVksQ0FBWixLQUFpQixDQUFwQjtNQUEyQixJQUFBLENBQUssTUFBTCxFQUEzQjtLQUFBLE1BQUE7TUFBNEMsSUFBQSxDQUFLLFdBQUwsRUFBNUM7O0lBQ0EsSUFBRyxRQUFIO01BQWlCLElBQUEsQ0FBSyxPQUFMLEVBQWpCOztJQUNBLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQSxHQUFRLENBQUMsSUFBQyxDQUFBLEVBQUQsR0FBSSxHQUFMLEVBQVUsSUFBQyxDQUFBLEVBQUQsR0FBSSxHQUFkO0lBQ1IsUUFBQSxDQUFBO0lBQ0EsSUFBQSxDQUFLLE1BQU0sQ0FBQyxJQUFQLEdBQVksQ0FBakIsRUFBb0IsTUFBTSxDQUFDLElBQVAsR0FBWSxDQUFoQyxFQUFrQyxNQUFNLENBQUMsSUFBekMsRUFBOEMsTUFBTSxDQUFDLElBQXJEO0lBQ0EsSUFBRyxDQUFJLEtBQVA7QUFBa0IsYUFBbEI7O0lBQ0EsR0FBQSxHQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBWCxDQUFBO0lBQ04sSUFBRyxLQUFLLENBQUMsS0FBTixLQUFlLEdBQWxCO01BQTJCLEdBQUEsR0FBTSxHQUFHLENBQUMsV0FBSixDQUFBLEVBQWpDOztJQUVBLElBQUcsSUFBQyxDQUFBLEVBQUQsS0FBSyxDQUFSO01BQ0MsSUFBQSxDQUFBO01BQ0EsU0FBQSxDQUFVLE1BQU0sQ0FBQyxJQUFQLEdBQVksQ0FBdEIsRUFBeUIsTUFBTSxDQUFDLElBQVAsR0FBWSxDQUFyQztNQUNBLEtBQUEsQ0FBTSxDQUFDLENBQVAsRUFBUyxDQUFDLENBQVY7TUFDQSxLQUFBLENBQU0sSUFBSSxDQUFDLEdBQUQsQ0FBVixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFxQixNQUFNLENBQUMsSUFBNUIsRUFBaUMsTUFBTSxDQUFDLElBQXhDO2FBQ0EsR0FBQSxDQUFBLEVBTEQ7S0FBQSxNQUFBO2FBT0MsS0FBQSxDQUFNLElBQUksQ0FBQyxHQUFELENBQVYsRUFBaUIsTUFBTSxDQUFDLElBQVAsR0FBWSxDQUE3QixFQUFnQyxNQUFNLENBQUMsSUFBUCxHQUFZLENBQTVDLEVBQThDLE1BQU0sQ0FBQyxJQUFyRCxFQUEwRCxNQUFNLENBQUMsSUFBakUsRUFQRDs7RUFWTTs7RUFtQlAsTUFBUyxDQUFDLEVBQUQsRUFBSSxFQUFKLENBQUE7QUFDVixRQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUE7SUFBRSxHQUFBLEdBQVEsQ0FBQSxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBTixVQUFVLEVBQUEsR0FBRyxNQUFNLENBQUMsSUFBUCxHQUFZLEVBQXpCLE9BQUEsR0FBNkIsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQW5DO1dBQ1IsR0FBQSxJQUFRLENBQUEsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQU4sV0FBVSxFQUFBLEdBQUcsTUFBTSxDQUFDLElBQVAsR0FBWSxFQUF6QixRQUFBLEdBQTZCLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFuQztFQUZBOztBQTNCSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z2xvYmFsfSBmcm9tICcuLi9qcy9nbG9iYWxzLmpzJ1xyXG5pbXBvcnQge3BhcmFtfSBmcm9tICcuLi9qcy91dGlscy5qcydcclxuXHJcbnBpY3MgPSBnbG9iYWwucGljc1xyXG53aWR0aCA9IGdsb2JhbC53aWR0aFxyXG5cclxuZXhwb3J0IGNsYXNzIFNxdWFyZVxyXG5cdGNvbnN0cnVjdG9yOiAoQG5yLEBpLEB4LEB5LEBvbmNsaWNrKSAtPlxyXG5cdFx0QGl4ID0gQGkgJSUgOFxyXG5cdFx0QGl5ID0gNyAtIEBpLy84XHJcblx0XHRAdyA9IGdsb2JhbC5TSVpFXHJcblx0XHRAaCA9IGdsb2JhbC5TSVpFXHJcblx0XHRAY29sID0gJ3doaXRlJ1xyXG5cclxuXHRkcmF3IDogKHBpZWNlLHNlbGVjdGVkKSA9PlxyXG5cdFx0aWYgKEBpeCtAaXkpICUgMiA9PSAxIHRoZW4gZmlsbCAnZ3JheScgZWxzZSBmaWxsICdsaWdodGdyYXknXHJcblx0XHRpZiBzZWxlY3RlZCB0aGVuIGZpbGwgJ2dyZWVuJ1xyXG5cdFx0W3gseV0gPSBbQGl4KzAuNSwgQGl5KzAuNV1cclxuXHRcdG5vU3Ryb2tlKClcclxuXHRcdHJlY3QgZ2xvYmFsLlNJWkUqeCwgZ2xvYmFsLlNJWkUqeSxnbG9iYWwuU0laRSxnbG9iYWwuU0laRVxyXG5cdFx0aWYgbm90IHBpZWNlIHRoZW4gcmV0dXJuXHJcblx0XHRrZXkgPSBwaWVjZS50eXBlLnRvTG93ZXJDYXNlKClcclxuXHRcdGlmIHBpZWNlLmNvbG9yID09ICd3JyB0aGVuIGtleSA9IGtleS50b1VwcGVyQ2FzZSgpXHJcblxyXG5cdFx0aWYgQG5yPT0wXHJcblx0XHRcdHB1c2goKVxyXG5cdFx0XHR0cmFuc2xhdGUgZ2xvYmFsLlNJWkUqeCwgZ2xvYmFsLlNJWkUqeVxyXG5cdFx0XHRzY2FsZSAtMSwtMVxyXG5cdFx0XHRpbWFnZSBwaWNzW2tleV0sMCwgMCxnbG9iYWwuU0laRSxnbG9iYWwuU0laRVxyXG5cdFx0XHRwb3AoKVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRpbWFnZSBwaWNzW2tleV0sIGdsb2JhbC5TSVpFKngsIGdsb2JhbC5TSVpFKnksZ2xvYmFsLlNJWkUsZ2xvYmFsLlNJWkVcclxuXHJcblx0aW5zaWRlIDogKG14LG15KSA9PlxyXG5cdFx0cmVzID0gICBAeC1Ady8yIDwgbXgtZ2xvYmFsLlNJWkUvMiA8IEB4K0B3LzJcclxuXHRcdHJlcyBhbmQgQHktQGgvMiA8IG15LWdsb2JhbC5TSVpFLzIgPCBAeStAaC8yXHJcbiJdfQ==
//# sourceURL=c:\github\2023-026-chessx2\coffee\square.coffee