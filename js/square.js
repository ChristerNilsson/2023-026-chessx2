// Generated by CoffeeScript 2.5.1
var pics, width,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

import {
  global
} from '../js/globals.js';

import {
  param
} from '../js/utils.js';

pics = global.pics;

width = global.width;

export var Square = class Square {
  constructor(nr, i, onclick) {
    this.draw = this.draw.bind(this);
    this.inside = this.inside.bind(this);
    this.nr = nr;
    this.i = i;
    this.onclick = onclick;
    this.ix = modulo(this.i, 8);
    this.iy = 7 - Math.floor(this.i / 8);
    // ix = i %% 8
    // iy = 7 - i // 8
    // x = global.mx() + global.size() * ix
    // y = global.my() + global.size() * iy + @nr * global.size() * 9
    this.w = global.size();
    this.h = global.size();
    this.col = 'white';
  }

  draw(piece, selected) {
    var key, x, y;
    if ((this.ix + this.iy) % 2 === 1) {
      fill('gray');
    } else {
      fill('lightgray');
    }
    if (selected) {
      fill('green');
    }
    [x, y] = [this.ix + 0.5, this.iy + 0.5];
    noStroke();
    rect(global.size() * x, global.size() * y, global.size(), global.size());
    if (!piece) {
      return;
    }
    key = piece.type.toLowerCase();
    if (piece.color === 'w') {
      key = key.toUpperCase();
    }
    if (this.nr === 0) {
      push();
      translate(global.size() * x, global.size() * y);
      scale(-1, -1);
      image(pics[key], 0, 0, global.size(), global.size());
      return pop();
    } else {
      return image(pics[key], global.size() * x, global.size() * y, global.size(), global.size());
    }
  }

  inside(mx, my) {
    var ref, ref1, res;
    this.x = global.mx() + global.size() * this.ix;
    this.y = global.my() + global.size() * this.iy + this.nr * global.size() * 9;
    this.w = global.size();
    this.h = global.size();
    res = (this.x - this.w / 2 < (ref = mx - global.size() / 2) && ref < this.x + this.w / 2);
    return res && (this.y - this.h / 2 < (ref1 = my - global.size() / 2) && ref1 < this.y + this.h / 2);
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3F1YXJlLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNxdWFyZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLEtBQUE7RUFBQTs7QUFBQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLEtBQVI7Q0FBQSxNQUFBOztBQUVBLElBQUEsR0FBTyxNQUFNLENBQUM7O0FBQ2QsS0FBQSxHQUFRLE1BQU0sQ0FBQzs7QUFFZixPQUFBLElBQWEsU0FBTixNQUFBLE9BQUE7RUFDTixXQUFhLEdBQUEsR0FBQSxTQUFBLENBQUE7UUFhYixDQUFBLFdBQUEsQ0FBQTtRQW1CQSxDQUFBLGFBQUEsQ0FBQTtJQWhDYyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFDckIsSUFBQyxDQUFBLEVBQUQsVUFBTSxJQUFDLENBQUEsR0FBSztJQUNaLElBQUMsQ0FBQSxFQUFELEdBQU0sQ0FBQSxjQUFJLElBQUMsQ0FBQSxJQUFHLEdBRGhCOzs7OztJQVFFLElBQUMsQ0FBQSxDQUFELEdBQUssTUFBTSxDQUFDLElBQVAsQ0FBQTtJQUNMLElBQUMsQ0FBQSxDQUFELEdBQUssTUFBTSxDQUFDLElBQVAsQ0FBQTtJQUNMLElBQUMsQ0FBQSxHQUFELEdBQU87RUFYSzs7RUFhYixJQUFPLENBQUMsS0FBRCxFQUFPLFFBQVAsQ0FBQTtBQUNSLFFBQUEsR0FBQSxFQUFBLENBQUEsRUFBQTtJQUFFLElBQUcsQ0FBQyxJQUFDLENBQUEsRUFBRCxHQUFJLElBQUMsQ0FBQSxFQUFOLENBQUEsR0FBWSxDQUFaLEtBQWlCLENBQXBCO01BQTJCLElBQUEsQ0FBSyxNQUFMLEVBQTNCO0tBQUEsTUFBQTtNQUE0QyxJQUFBLENBQUssV0FBTCxFQUE1Qzs7SUFDQSxJQUFHLFFBQUg7TUFBaUIsSUFBQSxDQUFLLE9BQUwsRUFBakI7O0lBQ0EsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBLEdBQVEsQ0FBQyxJQUFDLENBQUEsRUFBRCxHQUFJLEdBQUwsRUFBVSxJQUFDLENBQUEsRUFBRCxHQUFJLEdBQWQ7SUFDUixRQUFBLENBQUE7SUFDQSxJQUFBLENBQUssTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWMsQ0FBbkIsRUFBc0IsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWMsQ0FBcEMsRUFBc0MsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUF0QyxFQUFvRCxNQUFNLENBQUMsSUFBUCxDQUFBLENBQXBEO0lBQ0EsSUFBRyxDQUFJLEtBQVA7QUFBa0IsYUFBbEI7O0lBQ0EsR0FBQSxHQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBWCxDQUFBO0lBQ04sSUFBRyxLQUFLLENBQUMsS0FBTixLQUFlLEdBQWxCO01BQTJCLEdBQUEsR0FBTSxHQUFHLENBQUMsV0FBSixDQUFBLEVBQWpDOztJQUVBLElBQUcsSUFBQyxDQUFBLEVBQUQsS0FBSyxDQUFSO01BQ0MsSUFBQSxDQUFBO01BQ0EsU0FBQSxDQUFVLE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBQSxHQUFjLENBQXhCLEVBQTJCLE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBQSxHQUFjLENBQXpDO01BQ0EsS0FBQSxDQUFNLENBQUMsQ0FBUCxFQUFTLENBQUMsQ0FBVjtNQUNBLEtBQUEsQ0FBTSxJQUFJLENBQUMsR0FBRCxDQUFWLEVBQWlCLENBQWpCLEVBQW1CLENBQW5CLEVBQXNCLE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBdEIsRUFBb0MsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFwQzthQUNBLEdBQUEsQ0FBQSxFQUxEO0tBQUEsTUFBQTthQU9DLEtBQUEsQ0FBTSxJQUFJLENBQUMsR0FBRCxDQUFWLEVBQWlCLE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBQSxHQUFjLENBQS9CLEVBQWtDLE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBQSxHQUFjLENBQWhELEVBQWtELE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBbEQsRUFBZ0UsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFoRSxFQVBEOztFQVZNOztFQW1CUCxNQUFTLENBQUMsRUFBRCxFQUFJLEVBQUosQ0FBQTtBQUNWLFFBQUEsR0FBQSxFQUFBLElBQUEsRUFBQTtJQUFFLElBQUMsQ0FBQSxDQUFELEdBQUssTUFBTSxDQUFDLEVBQVAsQ0FBQSxDQUFBLEdBQWMsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWdCLElBQUMsQ0FBQTtJQUNwQyxJQUFDLENBQUEsQ0FBRCxHQUFLLE1BQU0sQ0FBQyxFQUFQLENBQUEsQ0FBQSxHQUFjLE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBQSxHQUFnQixJQUFDLENBQUEsRUFBL0IsR0FBb0MsSUFBQyxDQUFBLEVBQUQsR0FBTSxNQUFNLENBQUMsSUFBUCxDQUFBLENBQU4sR0FBc0I7SUFDL0QsSUFBQyxDQUFBLENBQUQsR0FBSyxNQUFNLENBQUMsSUFBUCxDQUFBO0lBQ0wsSUFBQyxDQUFBLENBQUQsR0FBSyxNQUFNLENBQUMsSUFBUCxDQUFBO0lBQ0wsR0FBQSxHQUFRLENBQUEsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQU4sVUFBVSxFQUFBLEdBQUcsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWMsRUFBM0IsT0FBQSxHQUErQixJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBckM7V0FDUixHQUFBLElBQVEsQ0FBQSxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBTixXQUFVLEVBQUEsR0FBRyxNQUFNLENBQUMsSUFBUCxDQUFBLENBQUEsR0FBYyxFQUEzQixRQUFBLEdBQStCLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFyQztFQU5BOztBQWpDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z2xvYmFsfSBmcm9tICcuLi9qcy9nbG9iYWxzLmpzJ1xyXG5pbXBvcnQge3BhcmFtfSBmcm9tICcuLi9qcy91dGlscy5qcydcclxuXHJcbnBpY3MgPSBnbG9iYWwucGljc1xyXG53aWR0aCA9IGdsb2JhbC53aWR0aFxyXG5cclxuZXhwb3J0IGNsYXNzIFNxdWFyZVxyXG5cdGNvbnN0cnVjdG9yOiAoQG5yLEBpLEBvbmNsaWNrKSAtPlxyXG5cdFx0QGl4ID0gQGkgJSUgOFxyXG5cdFx0QGl5ID0gNyAtIEBpLy84XHJcblxyXG5cdFx0IyBpeCA9IGkgJSUgOFxyXG5cdFx0IyBpeSA9IDcgLSBpIC8vIDhcclxuXHRcdCMgeCA9IGdsb2JhbC5teCgpICsgZ2xvYmFsLnNpemUoKSAqIGl4XHJcblx0XHQjIHkgPSBnbG9iYWwubXkoKSArIGdsb2JhbC5zaXplKCkgKiBpeSArIEBuciAqIGdsb2JhbC5zaXplKCkgKiA5XHJcblxyXG5cdFx0QHcgPSBnbG9iYWwuc2l6ZSgpXHJcblx0XHRAaCA9IGdsb2JhbC5zaXplKClcclxuXHRcdEBjb2wgPSAnd2hpdGUnXHJcblxyXG5cdGRyYXcgOiAocGllY2Usc2VsZWN0ZWQpID0+XHJcblx0XHRpZiAoQGl4K0BpeSkgJSAyID09IDEgdGhlbiBmaWxsICdncmF5JyBlbHNlIGZpbGwgJ2xpZ2h0Z3JheSdcclxuXHRcdGlmIHNlbGVjdGVkIHRoZW4gZmlsbCAnZ3JlZW4nXHJcblx0XHRbeCx5XSA9IFtAaXgrMC41LCBAaXkrMC41XVxyXG5cdFx0bm9TdHJva2UoKVxyXG5cdFx0cmVjdCBnbG9iYWwuc2l6ZSgpKngsIGdsb2JhbC5zaXplKCkqeSxnbG9iYWwuc2l6ZSgpLGdsb2JhbC5zaXplKClcclxuXHRcdGlmIG5vdCBwaWVjZSB0aGVuIHJldHVyblxyXG5cdFx0a2V5ID0gcGllY2UudHlwZS50b0xvd2VyQ2FzZSgpXHJcblx0XHRpZiBwaWVjZS5jb2xvciA9PSAndycgdGhlbiBrZXkgPSBrZXkudG9VcHBlckNhc2UoKVxyXG5cclxuXHRcdGlmIEBucj09MFxyXG5cdFx0XHRwdXNoKClcclxuXHRcdFx0dHJhbnNsYXRlIGdsb2JhbC5zaXplKCkqeCwgZ2xvYmFsLnNpemUoKSp5XHJcblx0XHRcdHNjYWxlIC0xLC0xXHJcblx0XHRcdGltYWdlIHBpY3Nba2V5XSwgMCwwLCBnbG9iYWwuc2l6ZSgpLGdsb2JhbC5zaXplKClcclxuXHRcdFx0cG9wKClcclxuXHRcdGVsc2VcclxuXHRcdFx0aW1hZ2UgcGljc1trZXldLCBnbG9iYWwuc2l6ZSgpKngsIGdsb2JhbC5zaXplKCkqeSxnbG9iYWwuc2l6ZSgpLGdsb2JhbC5zaXplKClcclxuXHJcblx0aW5zaWRlIDogKG14LG15KSA9PlxyXG5cdFx0QHggPSBnbG9iYWwubXgoKSArIGdsb2JhbC5zaXplKCkgKiBAaXhcclxuXHRcdEB5ID0gZ2xvYmFsLm15KCkgKyBnbG9iYWwuc2l6ZSgpICogQGl5ICsgQG5yICogZ2xvYmFsLnNpemUoKSAqIDlcclxuXHRcdEB3ID0gZ2xvYmFsLnNpemUoKVxyXG5cdFx0QGggPSBnbG9iYWwuc2l6ZSgpXHJcblx0XHRyZXMgPSAgIEB4LUB3LzIgPCBteC1nbG9iYWwuc2l6ZSgpLzIgPCBAeCtAdy8yXHJcblx0XHRyZXMgYW5kIEB5LUBoLzIgPCBteS1nbG9iYWwuc2l6ZSgpLzIgPCBAeStAaC8yXHJcbiJdfQ==
//# sourceURL=c:\github\2023-026-chessx2\coffee\square.coffee