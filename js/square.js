// Generated by CoffeeScript 2.5.1
var pics, width,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

import {
  global
} from '../js/globals.js';

import {
  param
} from '../js/utils.js';

pics = global.pics;

width = global.width;

export var Square = class Square {
  constructor(nr, i, onclick) {
    this.draw = this.draw.bind(this);
    this.inside = this.inside.bind(this);
    this.nr = nr;
    this.i = i;
    this.onclick = onclick;
    this.ix = modulo(this.i, 8);
    this.iy = 7 - Math.floor(this.i / 8);
    this.w = global.size();
    this.h = global.size();
    this.col = 'white';
  }

  draw(piece, selected) {
    var key, x, y;
    if ((this.ix + this.iy) % 2 === 1) {
      fill('gray');
    } else {
      fill('lightgray');
    }
    if (selected) {
      fill('green');
    }
    [x, y] = [this.ix + 0.5, this.iy + 0.5];
    noStroke();
    rect(global.size() * x, global.size() * y, global.size(), global.size());
    if (!piece) {
      return;
    }
    key = piece.type.toLowerCase();
    if (piece.color === 'w') {
      key = key.toUpperCase();
    }
    if (this.nr === 0) {
      push();
      translate(global.size() * x, global.size() * y);
      scale(-1, -1);
      image(pics[key], 0, 0, global.size(), global.size());
      return pop();
    } else {
      return image(pics[key], global.size() * x, global.size() * y, global.size(), global.size());
    }
  }

  inside(mx, my) {
    var ref, ref1, res;
    this.x = global.mx() + global.size() * this.ix;
    this.y = global.my() + global.size() * this.iy + this.nr * global.size() * 9;
    this.w = global.size();
    this.h = global.size();
    res = (this.x - this.w / 2 < (ref = mx - global.size() / 2) && ref < this.x + this.w / 2);
    return res && (this.y - this.h / 2 < (ref1 = my - global.size() / 2) && ref1 < this.y + this.h / 2);
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3F1YXJlLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNxdWFyZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLEtBQUE7RUFBQTs7QUFBQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLEtBQVI7Q0FBQSxNQUFBOztBQUVBLElBQUEsR0FBTyxNQUFNLENBQUM7O0FBQ2QsS0FBQSxHQUFRLE1BQU0sQ0FBQzs7QUFFZixPQUFBLElBQWEsU0FBTixNQUFBLE9BQUE7RUFDTixXQUFhLEdBQUEsR0FBQSxTQUFBLENBQUE7UUFRYixDQUFBLFdBQUEsQ0FBQTtRQW1CQSxDQUFBLGFBQUEsQ0FBQTtJQTNCYyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFDckIsSUFBQyxDQUFBLEVBQUQsVUFBTSxJQUFDLENBQUEsR0FBSztJQUNaLElBQUMsQ0FBQSxFQUFELEdBQU0sQ0FBQSxjQUFJLElBQUMsQ0FBQSxJQUFHO0lBRWQsSUFBQyxDQUFBLENBQUQsR0FBSyxNQUFNLENBQUMsSUFBUCxDQUFBO0lBQ0wsSUFBQyxDQUFBLENBQUQsR0FBSyxNQUFNLENBQUMsSUFBUCxDQUFBO0lBQ0wsSUFBQyxDQUFBLEdBQUQsR0FBTztFQU5LOztFQVFiLElBQU8sQ0FBQyxLQUFELEVBQU8sUUFBUCxDQUFBO0FBQ1IsUUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBO0lBQUUsSUFBRyxDQUFDLElBQUMsQ0FBQSxFQUFELEdBQUksSUFBQyxDQUFBLEVBQU4sQ0FBQSxHQUFZLENBQVosS0FBaUIsQ0FBcEI7TUFBMkIsSUFBQSxDQUFLLE1BQUwsRUFBM0I7S0FBQSxNQUFBO01BQTRDLElBQUEsQ0FBSyxXQUFMLEVBQTVDOztJQUNBLElBQUcsUUFBSDtNQUFpQixJQUFBLENBQUssT0FBTCxFQUFqQjs7SUFDQSxDQUFDLENBQUQsRUFBRyxDQUFILENBQUEsR0FBUSxDQUFDLElBQUMsQ0FBQSxFQUFELEdBQUksR0FBTCxFQUFVLElBQUMsQ0FBQSxFQUFELEdBQUksR0FBZDtJQUNSLFFBQUEsQ0FBQTtJQUNBLElBQUEsQ0FBSyxNQUFNLENBQUMsSUFBUCxDQUFBLENBQUEsR0FBYyxDQUFuQixFQUFzQixNQUFNLENBQUMsSUFBUCxDQUFBLENBQUEsR0FBYyxDQUFwQyxFQUFzQyxNQUFNLENBQUMsSUFBUCxDQUFBLENBQXRDLEVBQW9ELE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBcEQ7SUFDQSxJQUFHLENBQUksS0FBUDtBQUFrQixhQUFsQjs7SUFDQSxHQUFBLEdBQU0sS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFYLENBQUE7SUFDTixJQUFHLEtBQUssQ0FBQyxLQUFOLEtBQWUsR0FBbEI7TUFBMkIsR0FBQSxHQUFNLEdBQUcsQ0FBQyxXQUFKLENBQUEsRUFBakM7O0lBRUEsSUFBRyxJQUFDLENBQUEsRUFBRCxLQUFLLENBQVI7TUFDQyxJQUFBLENBQUE7TUFDQSxTQUFBLENBQVUsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWMsQ0FBeEIsRUFBMkIsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWMsQ0FBekM7TUFDQSxLQUFBLENBQU0sQ0FBQyxDQUFQLEVBQVMsQ0FBQyxDQUFWO01BQ0EsS0FBQSxDQUFNLElBQUksQ0FBQyxHQUFELENBQVYsRUFBaUIsQ0FBakIsRUFBbUIsQ0FBbkIsRUFBc0IsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUF0QixFQUFvQyxNQUFNLENBQUMsSUFBUCxDQUFBLENBQXBDO2FBQ0EsR0FBQSxDQUFBLEVBTEQ7S0FBQSxNQUFBO2FBT0MsS0FBQSxDQUFNLElBQUksQ0FBQyxHQUFELENBQVYsRUFBaUIsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWMsQ0FBL0IsRUFBa0MsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWMsQ0FBaEQsRUFBa0QsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFsRCxFQUFnRSxNQUFNLENBQUMsSUFBUCxDQUFBLENBQWhFLEVBUEQ7O0VBVk07O0VBbUJQLE1BQVMsQ0FBQyxFQUFELEVBQUksRUFBSixDQUFBO0FBQ1YsUUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBO0lBQUUsSUFBQyxDQUFBLENBQUQsR0FBSyxNQUFNLENBQUMsRUFBUCxDQUFBLENBQUEsR0FBYyxNQUFNLENBQUMsSUFBUCxDQUFBLENBQUEsR0FBZ0IsSUFBQyxDQUFBO0lBQ3BDLElBQUMsQ0FBQSxDQUFELEdBQUssTUFBTSxDQUFDLEVBQVAsQ0FBQSxDQUFBLEdBQWMsTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWdCLElBQUMsQ0FBQSxFQUEvQixHQUFvQyxJQUFDLENBQUEsRUFBRCxHQUFNLE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBTixHQUFzQjtJQUMvRCxJQUFDLENBQUEsQ0FBRCxHQUFLLE1BQU0sQ0FBQyxJQUFQLENBQUE7SUFDTCxJQUFDLENBQUEsQ0FBRCxHQUFLLE1BQU0sQ0FBQyxJQUFQLENBQUE7SUFDTCxHQUFBLEdBQVEsQ0FBQSxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBTixVQUFVLEVBQUEsR0FBRyxNQUFNLENBQUMsSUFBUCxDQUFBLENBQUEsR0FBYyxFQUEzQixPQUFBLEdBQStCLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFyQztXQUNSLEdBQUEsSUFBUSxDQUFBLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFOLFdBQVUsRUFBQSxHQUFHLE1BQU0sQ0FBQyxJQUFQLENBQUEsQ0FBQSxHQUFjLEVBQTNCLFFBQUEsR0FBK0IsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQXJDO0VBTkE7O0FBNUJIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnbG9iYWx9IGZyb20gJy4uL2pzL2dsb2JhbHMuanMnXHJcbmltcG9ydCB7cGFyYW19IGZyb20gJy4uL2pzL3V0aWxzLmpzJ1xyXG5cclxucGljcyA9IGdsb2JhbC5waWNzXHJcbndpZHRoID0gZ2xvYmFsLndpZHRoXHJcblxyXG5leHBvcnQgY2xhc3MgU3F1YXJlXHJcblx0Y29uc3RydWN0b3I6IChAbnIsQGksQG9uY2xpY2spIC0+XHJcblx0XHRAaXggPSBAaSAlJSA4XHJcblx0XHRAaXkgPSA3IC0gQGkvLzhcclxuXHJcblx0XHRAdyA9IGdsb2JhbC5zaXplKClcclxuXHRcdEBoID0gZ2xvYmFsLnNpemUoKVxyXG5cdFx0QGNvbCA9ICd3aGl0ZSdcclxuXHJcblx0ZHJhdyA6IChwaWVjZSxzZWxlY3RlZCkgPT5cclxuXHRcdGlmIChAaXgrQGl5KSAlIDIgPT0gMSB0aGVuIGZpbGwgJ2dyYXknIGVsc2UgZmlsbCAnbGlnaHRncmF5J1xyXG5cdFx0aWYgc2VsZWN0ZWQgdGhlbiBmaWxsICdncmVlbidcclxuXHRcdFt4LHldID0gW0BpeCswLjUsIEBpeSswLjVdXHJcblx0XHRub1N0cm9rZSgpXHJcblx0XHRyZWN0IGdsb2JhbC5zaXplKCkqeCwgZ2xvYmFsLnNpemUoKSp5LGdsb2JhbC5zaXplKCksZ2xvYmFsLnNpemUoKVxyXG5cdFx0aWYgbm90IHBpZWNlIHRoZW4gcmV0dXJuXHJcblx0XHRrZXkgPSBwaWVjZS50eXBlLnRvTG93ZXJDYXNlKClcclxuXHRcdGlmIHBpZWNlLmNvbG9yID09ICd3JyB0aGVuIGtleSA9IGtleS50b1VwcGVyQ2FzZSgpXHJcblxyXG5cdFx0aWYgQG5yPT0wXHJcblx0XHRcdHB1c2goKVxyXG5cdFx0XHR0cmFuc2xhdGUgZ2xvYmFsLnNpemUoKSp4LCBnbG9iYWwuc2l6ZSgpKnlcclxuXHRcdFx0c2NhbGUgLTEsLTFcclxuXHRcdFx0aW1hZ2UgcGljc1trZXldLCAwLDAsIGdsb2JhbC5zaXplKCksZ2xvYmFsLnNpemUoKVxyXG5cdFx0XHRwb3AoKVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRpbWFnZSBwaWNzW2tleV0sIGdsb2JhbC5zaXplKCkqeCwgZ2xvYmFsLnNpemUoKSp5LGdsb2JhbC5zaXplKCksZ2xvYmFsLnNpemUoKVxyXG5cclxuXHRpbnNpZGUgOiAobXgsbXkpID0+XHJcblx0XHRAeCA9IGdsb2JhbC5teCgpICsgZ2xvYmFsLnNpemUoKSAqIEBpeFxyXG5cdFx0QHkgPSBnbG9iYWwubXkoKSArIGdsb2JhbC5zaXplKCkgKiBAaXkgKyBAbnIgKiBnbG9iYWwuc2l6ZSgpICogOVxyXG5cdFx0QHcgPSBnbG9iYWwuc2l6ZSgpXHJcblx0XHRAaCA9IGdsb2JhbC5zaXplKClcclxuXHRcdHJlcyA9ICAgQHgtQHcvMiA8IG14LWdsb2JhbC5zaXplKCkvMiA8IEB4K0B3LzJcclxuXHRcdHJlcyBhbmQgQHktQGgvMiA8IG15LWdsb2JhbC5zaXplKCkvMiA8IEB5K0BoLzJcclxuIl19
//# sourceURL=c:\github\2023-026-chessx2\coffee\square.coffee