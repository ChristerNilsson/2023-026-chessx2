// Generated by CoffeeScript 2.5.1
var SIZE;

import {
  ass,
  log,
  range,
  spaceShip
} from '../js/utils.js';

import {
  global
} from '../js/globals.js';

import _ from 'https://cdn.skypack.dev/lodash';

SIZE = 2;

export var Tree = class Tree {
  constructor(arr) {
    this.getPath = this.getPath.bind(this);
    this.getStart = this.getStart.bind(this);
    this.getStopp = this.getStopp.bind(this);
    this.getQuestions = this.getQuestions.bind(this);
    // sök igenom hela arr[start:stopp] efter alla rader med rätt level och sortera
    // Avbryt om vi hamnar utanför det aktuella trädet.
    this.getAnswers = this.getAnswers.bind(this);
    this.test = this.test.bind(this);
    this.arr = arr;
  }

  getPath(i) {
    var res;
    res = [];
    while (true) {
      res.push(this.arr[i][0]);
      if (this.arr[i][2] === 0) {
        break;
      }
      i = i - this.arr[i][2];
    }
    return _.reverse(res).join('.');
  }

  getStart(path) {
    var i, j, k, key, keys, len, ref;
    keys = path.split('.');
    j = 0;
    ref = range(keys.length);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      key = keys[i];
      while (this.arr[j][0] !== key || this.arr[j][1] !== i) {
        j += 1;
        if (j >= this.arr.length) {
          return -1;
        }
      }
    }
    return j;
  }

  getStopp(path, index) {
    var j, keys;
    keys = path.split('.');
    j = index + 1;
    while (this.arr[j][1] >= keys.length) {
      j += 1;
    }
    return j;
  }

  getQuestions(start, stopp) {
    var res;
    res = _.map(range(start, stopp), (i) => {
      return [this.arr[i][3], this.getPath(i), i];
    });
    res.sort((a, b) => {
      return spaceShip(b[0], a[0]) || spaceShip(a[1], b[1]);
    });
    return _.map(res, (item) => {
      return item[2];
    });
  }

  getAnswers(i, stopp) {
    var item, k, l, len, len1, level, ref, res, result;
    level = this.arr[i][1];
    res = [];
    ref = this.arr.slice(i + 1, stopp);
    for (k = 0, len = ref.length; k < len; k++) {
      item = ref[k];
      if (item[1] <= level) {
        break;
      }
      if (item[1] === level + 1) {
        res.push(item);
      }
    }
    res.sort((a, b) => {
      return spaceShip(b[3], a[3]);
    });
    result = [res[0][0]];
    for (i = l = 0, len1 = res.length; l < len1; i = ++l) {
      item = res[i];
      // console.log item,i
      if (i === 0) {
        continue;
      }
      if (res[i][3] / res[i - 1][3] >= 0.8) {
        result.push(item[0]);
      } else {
        break;
      }
    }
    // console.log 'result',result
    return result;
  }

  test() {
    var questions;
    if (SIZE === 0) {
      ass("d2d4", this.getPath(0));
      ass("d2d4.g8f6", this.getPath(1));
      ass("g2g3.d7d5.f1g2", this.getPath(60));
      ass(22, this.getStart("e2e4"));
      ass(32, this.getStart("e2e4.e7e5"));
      ass(-1, this.getStart("e2e4.e7e5.g1f3.b8c6.f1c4"));
      ass(42, this.getStopp("e2e4", 22));
      ass(34, this.getStopp("e2e4.e7e5", 32));
    }
    // questions = getQuestions 32,34

    // ass [9, 'e2e4.e7e5'], questions[0]
    // ass [6, 'e2e4.e7e5.g1f3'], questions[1]

    // ass getAnswers(22,42), [['c7c5', 1, 1, 14], ['g7g6', 1, 15, 13], ['d7d5', 1, 3, 9], ['e7e5', 1, 10, 9], ['c7c6', 1, 12, 6]]
    // ass getAnswers(32,34), [['g1f3', 2, 1, 6]]
    if (SIZE === 1) {
      ass("d2d4", this.getPath(0));
      ass("d2d4.d7d5", this.getPath(1));
      ass("e2e4.e7e5.g1f3.b8c6.f1c4", this.getPath(2557));
      ass("e2e4.e7e5.g1f3.b8c6.f1c4.f8c5.b2b4.c5b4.c2c3.b4e7.d2d4.c6a5", this.getPath(2611));
      ass("e2e4.e7e5.g1f3.b8c6.d2d4", this.getPath(2612));
      ass("c2c3", this.getPath(global.arr.length - 1));
      ass(2557, this.getStart("e2e4.e7e5.g1f3.b8c6.f1c4"));
      ass(2612, this.getStopp("e2e4.e7e5.g1f3.b8c6.f1c4", 2557));
    }
    // questions = getQuestions 2557,2612
    // ass [134, 'e2e4.e7e5.g1f3.b8c6.f1c4'], questions[0] 
    // ass [5, 'e2e4.e7e5.g1f3.b8c6.f1c4.g8f6.e1g1.f8e7'], _.last questions
    // ass getAnswers(2557,2612), [['g8f6', 5, 1, 60], ['f8c5', 5, 29, 60]]
    if (SIZE === 2) {
      ass("e2e4.c7c5.g1f3.e7e6.d2d4.c5d4.f3d4.a7a6.f1d3.d8c7.e1g1.b8c6.d4c6.d7c6.b1d2", this.getPath(100));
      ass("e2e4.d7d5.e4d5.g8f6.g1f3.f6d5", this.getPath(10000));
      ass(4585, this.getStart("e2e4.e7e5.g1f3.b8c6.f1c4"));
      ass(4900, this.getStopp("e2e4.e7e5.g1f3.b8c6.f1c4", 4585));
      questions = this.getQuestions(4585, 4900);
      ass(4840, questions[15]);
      ass(4841, questions[16]);
      ass(this.getAnswers(4585, 4900), [['g8f6', 5, 146, 529], ['f8c5', 5, 1, 454], ['f8e7', 5, 305, 19], ['g7g6', 5, 312, 12], ['f7f5', 5, 311, 8], ['d7d6', 5, 313, 8], ['a7a6', 5, 310, 5]]);
      ass(this.getAnswers(4731, 4900), [['d2d3', 6, 1, 358], ['f3g5', 6, 108, 95], ['d2d4', 6, 85, 33], ['e1g1', 6, 154, 22], ['b1c3', 6, 145, 11], ['c2c3', 6, 158, 8]]);
    }
    return console.log('testTree done.');
  }

};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023-026-chessx2\coffee\tree.coffee